{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport AppLayout from '../components/appLayout';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, SIGN_UP_DONE, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]); //cors import 해주고 백엔드 서버 url로 바꿔줬더니 된다\n//이슈 : 404error 발생\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user); //useEffect\n  //리액트컴포넌트가 렌더링 될때마다 특정 작업을 실행할 수 있도록 하는 Hook\n\n  useEffect(() => {\n    if (me !== null && me !== void 0 && me.id) {\n      alert('이미 로그인 하셨습니다.');\n      router.push('/');\n    }\n  }, [me === null || me === void 0 ? void 0 : me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      router.push('/');\n    }\n  }), [signUpDone];\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false); //passwordError가 원래는 false였음\n\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password); //다르면 password를 true로 set한다\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          required: true,\n          onChange: onChangeEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-nickname\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-nickname\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), termError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Head","Form","Input","Checkbox","Button","styled","useDispatch","useSelector","useRouter","AppLayout","useInput","SIGN_UP_REQUEST","SIGN_UP_DONE","LOAD_MY_INFO_REQUEST","wrapper","axios","END","ErrorMessage","div","Signup","router","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","alert","push","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","type","data","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport AppLayout from '../components/appLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { SIGN_UP_REQUEST, SIGN_UP_DONE, LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nconst ErrorMessage = styled.div`\r\ncolor: red;\r\n`;\r\n\r\n//cors import 해주고 백엔드 서버 url로 바꿔줬더니 된다\r\n//이슈 : 404error 발생\r\n\r\nconst Signup = () => {\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const {  signUpLoading, signUpDone, signUpError, me } = useSelector((state)=>state.user);\r\n\r\n    //useEffect\r\n    //리액트컴포넌트가 렌더링 될때마다 특정 작업을 실행할 수 있도록 하는 Hook\r\n    useEffect(()=>{\r\n        if (me?.id) { \r\n            alert('이미 로그인 하셨습니다.');\r\n            router.push('/');\r\n        }\r\n    }, [me?.id]);\r\n\r\n    useEffect(()=>{\r\n        if (signUpDone) {\r\n            router.push('/');\r\n        }\r\n    }), [signUpDone];\r\n\r\n    useEffect(()=>{\r\n        if (signUpError) {\r\n            alert(signUpError);\r\n        }\r\n    },[signUpError])\r\n\r\n\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);//passwordError가 원래는 false였음\r\n    const onChangePasswordCheck = useCallback((e)=>{\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);//다르면 password를 true로 set한다\r\n    }, [password]);\r\n\r\n    const [term, setTerm] = useState('');\r\n    const [termError, setTermError] = useState(false);\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n        setTermError(false);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term) {\r\n            return setTermError(true);\r\n        }\r\n        \r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: { email, password, nickname },\r\n        });\r\n        \r\n    },[password,passwordCheck,term]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n            <title>회원가입 | NodeBird</title>\r\n            </Head> \r\n            <Form onFinish={onSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"user-email\">이메일</label>\r\n                    <br />\r\n                    <Input name=\"user-email\" type=\"email\" value={email} required onChange={onChangeEmail} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nickname\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input \r\n                    name=\"user-password-check\"\r\n                    type=\"password\"\r\n                    value={passwordCheck}\r\n                    required\r\n                    onChange={onChangePasswordCheck}\r\n                    />\r\n                    {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\r\n                </div>\r\n                    <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                    {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n                    </div>\r\n                    <div style={{marginTop: 10}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                    </div>\r\n            </Form>\r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}