{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nexport var useJoinRoom = function useJoinRoom(socket, id) {\n  _s();\n\n  var requestJoin = function requestJoin() {\n    socket.emit('joinRoom', id);\n  };\n\n  useEffect(requestJoin, []);\n};\n/*\r\nexport const useWantingRoom = (socket, userId, dispatch) => {\r\n    const ms = useMemo(()=>socket, [socket]);\r\n\r\n    const roomData = () => {\r\n        ms.emit('roomListDataRequest', userId, (res) => {\r\n            dispatch({\r\n                type: UPDATE_ROOM_LIST,\r\n                data: res.rooms\r\n            });\r\n        })\r\n\r\n        ms.on('updateRoomList', (room)=>{\r\n            const users = room.participants;\r\n\r\n            users.forEach(u => {\r\n                if (u.id === userId) {\r\n                    dispatch({\r\n                        type: UPDATE_ROOM_LIST,\r\n                        data: [...rooms, room]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(roomData, []);\r\n};\r\n*/\n\n_s(useJoinRoom, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/hooks/chatHooks.js"],"names":["useEffect","useMemo","useJoinRoom","socket","id","requestJoin","emit"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,EAAT,EAAgB;AAAA;;AACvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtBF,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBF,EAAxB;AACH,GAHD;;AAKAJ,EAAAA,SAAS,CAACK,WAAD,EAAc,EAAd,CAAT;AACH,CAPM;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GApCaH,W","sourcesContent":["import { useEffect, useMemo } from 'react';\r\n\r\nexport const useJoinRoom = (socket, id) => {\r\n    const requestJoin = () => {\r\n       \r\n        socket.emit('joinRoom', id);\r\n    };\r\n\r\n    useEffect(requestJoin, []);\r\n};\r\n/*\r\nexport const useWantingRoom = (socket, userId, dispatch) => {\r\n    const ms = useMemo(()=>socket, [socket]);\r\n\r\n    const roomData = () => {\r\n        ms.emit('roomListDataRequest', userId, (res) => {\r\n            dispatch({\r\n                type: UPDATE_ROOM_LIST,\r\n                data: res.rooms\r\n            });\r\n        })\r\n\r\n        ms.on('updateRoomList', (room)=>{\r\n            const users = room.participants;\r\n\r\n            users.forEach(u => {\r\n                if (u.id === userId) {\r\n                    dispatch({\r\n                        type: UPDATE_ROOM_LIST,\r\n                        data: [...rooms, room]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(roomData, []);\r\n};\r\n*/"]},"metadata":{},"sourceType":"module"}