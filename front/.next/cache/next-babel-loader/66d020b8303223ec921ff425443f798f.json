{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nexport const useJoinRoom = (socket, id) => {\n  const requestJoin = () => {\n    socket.emit('joinRoom', id);\n    /*\r\n    return () => {\r\n        console.log(`Leave Room: ${roomId}`);\r\n        socket.emit('leaveRoom', roomId);\r\n    };\r\n    */\n  };\n\n  useEffect(requestJoin, []);\n};\nexport const useWantingRoom = (socket, userId, rooms, setRooms) => {\n  const ms = useMemo(() => socket, [socket]);\n\n  const roomData = () => {\n    ms.emit('roomListDataRequest', userId, res => {\n      setRooms(res.rooms);\n    });\n    ms.on('updateRoomList', room => {\n      const users = room.participants;\n      console.log('update room list'); //console.log(users);\n\n      users.forEach(u => {\n        if (u.id === userId) {\n          setRooms([...rooms, room]);\n        }\n      });\n    });\n  };\n\n  useEffect(roomData, []);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/hooks/chatHooks.js"],"names":["useEffect","useMemo","useState","useJoinRoom","socket","id","requestJoin","emit","useWantingRoom","userId","rooms","setRooms","ms","roomData","res","on","room","users","participants","console","log","forEach","u"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AACvC,QAAMC,WAAW,GAAG,MAAM;AAEtBF,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBF,EAAxB;AAEA;AACR;AACA;AACA;AACA;AACA;AACK,GAVD;;AAYAL,EAAAA,SAAS,CAACM,WAAD,EAAc,EAAd,CAAT;AACH,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAG,CAACJ,MAAD,EAASK,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,KAAqC;AAC/D,QAAMC,EAAE,GAAGX,OAAO,CAAC,MAAIG,MAAL,EAAa,CAACA,MAAD,CAAb,CAAlB;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACnBD,IAAAA,EAAE,CAACL,IAAH,CAAQ,qBAAR,EAA+BE,MAA/B,EAAwCK,GAAD,IAAS;AAC5CH,MAAAA,QAAQ,CAACG,GAAG,CAACJ,KAAL,CAAR;AACH,KAFD;AAGAE,IAAAA,EAAE,CAACG,EAAH,CAAM,gBAAN,EAAyBC,IAAD,IAAQ;AAC5B,YAAMC,KAAK,GAAGD,IAAI,CAACE,YAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAF4B,CAG5B;;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcC,CAAC,IAAI;AACf,YAAIA,CAAC,CAACjB,EAAF,KAASI,MAAb,EAAqB;AACjBE,UAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,IAAX,CAAD,CAAR;AACH;AACJ,OAJD;AAKH,KATD;AAUH,GAdD;;AAgBAhB,EAAAA,SAAS,CAACa,QAAD,EAAW,EAAX,CAAT;AACH,CApBM","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\r\n\r\nexport const useJoinRoom = (socket, id) => {\r\n    const requestJoin = () => {\r\n       \r\n        socket.emit('joinRoom', id);\r\n\r\n        /*\r\n        return () => {\r\n            console.log(`Leave Room: ${roomId}`);\r\n            socket.emit('leaveRoom', roomId);\r\n        };\r\n        */\r\n    };\r\n\r\n    useEffect(requestJoin, []);\r\n}\r\n\r\nexport const useWantingRoom = (socket, userId, rooms, setRooms) => {\r\n    const ms = useMemo(()=>socket, [socket]);\r\n\r\n    const roomData = () => {\r\n        ms.emit('roomListDataRequest', userId, (res) => {\r\n            setRooms(res.rooms);\r\n        })\r\n        ms.on('updateRoomList', (room)=>{\r\n            const users = room.participants;\r\n            console.log('update room list')\r\n            //console.log(users);\r\n            users.forEach(u => {\r\n                if (u.id === userId) {\r\n                    setRooms([...rooms, room]);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(roomData, []);\r\n}"]},"metadata":{},"sourceType":"module"}