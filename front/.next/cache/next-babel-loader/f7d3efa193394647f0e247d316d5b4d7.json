{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\message\\\\[roomId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport io from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport Room from './../../components/Room';\nimport Chat from './../../components/Chat';\nimport DesktopLayout from './../../components/layout/DesktopLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar roomSocket = io.connect('http://localhost:3065/room', {\n  withCredentials: true\n});\nvar chatSocket = io.connect('http://localhost:3065/chat', {\n  withCredentials: true\n});\n\nvar Message = function Message() {\n  _s();\n\n  var router = useRouter();\n  var roomId = router.query.roomId;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useState = useState(null),\n      room = _useState[0],\n      setRoom = _useState[1];\n\n  useEffect(function () {\n    me.participateRoom.forEach(function (r) {\n      if (r.id === roomId) {\n        setRoom(r);\n      }\n    });\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(DesktopLayout, {\n    Side: /*#__PURE__*/_jsxDEV(Room, {\n      height: document.documentElement.clientHeight,\n      socket: roomSocket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, _this),\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      roomId: roomId,\n      chatSocket: chatSocket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Message, \"3/AF7Iaqfs/gKRmilvwdM0mcCwA=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/message/[roomId].js"],"names":["React","useState","useRouter","io","useSelector","Room","Chat","DesktopLayout","roomSocket","connect","withCredentials","chatSocket","Message","router","roomId","query","state","user","me","room","setRoom","useEffect","participateRoom","forEach","r","id","document","documentElement","clientHeight"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;;AAGA,IAAMC,UAAU,GAAGL,EAAE,CAACM,OAAH,CAAW,4BAAX,EAAyC;AACxDC,EAAAA,eAAe,EAAE;AADuC,CAAzC,CAAnB;AAIA,IAAMC,UAAU,GAAGR,EAAE,CAACM,OAAH,CAAW,4BAAX,EAAyC;AACxDC,EAAAA,eAAe,EAAE;AADuC,CAAzC,CAAnB;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AADkB,MAEVY,MAFU,GAECD,MAAM,CAACE,KAFR,CAEVD,MAFU;;AAAA,qBAGHV,WAAW,CAAC,UAACY,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAHR;AAAA,MAGVC,EAHU,gBAGVA,EAHU;;AAAA,kBAIQjB,QAAQ,CAAC,IAAD,CAJhB;AAAA,MAIVkB,IAJU;AAAA,MAIJC,OAJI;;AAMlBC,EAAAA,SAAS,CAAC,YAAI;AAEVH,IAAAA,EAAE,CAACI,eAAH,CAAmBC,OAAnB,CAA2B,UAAAC,CAAC,EAAI;AAC5B,UAAIA,CAAC,CAACC,EAAF,KAASX,MAAb,EAAoB;AAChBM,QAAAA,OAAO,CAACI,CAAD,CAAP;AACH;AACJ,KAJD;AAMH,GARQ,EAQN,CAACN,EAAD,CARM,CAAT;AAUA,sBACI,QAAC,aAAD;AAAe,IAAA,IAAI,eAAE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEQ,QAAQ,CAACC,eAAT,CAAyBC,YAAvC;AAAqD,MAAA,MAAM,EAAEpB;AAA7D;AAAA;AAAA;AAAA;AAAA,aAArB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEM,MAAd;AAAsB,MAAA,UAAU,EAAEH;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CArBD;;GAAMC,O;UACaV,S,EAEAE,W;;;KAHbQ,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Room from './../../components/Room';\r\nimport Chat from './../../components/Chat';\r\nimport DesktopLayout from './../../components/layout/DesktopLayout';\r\n\r\n\r\nconst roomSocket = io.connect('http://localhost:3065/room', {\r\n    withCredentials: true,\r\n});\r\n\r\nconst chatSocket = io.connect('http://localhost:3065/chat', {\r\n    withCredentials: true,\r\n});\r\n\r\nconst Message = () => {\r\n    const router = useRouter();\r\n    const { roomId } = router.query;\r\n    const { me } = useSelector((state)=>state.user);\r\n    const [ room, setRoom ] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n\r\n        me.participateRoom.forEach(r => {\r\n            if (r.id === roomId){\r\n                setRoom(r);\r\n            }\r\n        });\r\n\r\n    }, [me]);\r\n\r\n    return(\r\n        <DesktopLayout Side={<Room height={document.documentElement.clientHeight} socket={roomSocket}/>}>\r\n            <Chat roomId={roomId} chatSocket={chatSocket}/>\r\n        </DesktopLayout>\r\n    );\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}