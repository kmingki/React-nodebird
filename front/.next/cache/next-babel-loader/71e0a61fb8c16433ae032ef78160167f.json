{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchCreateChat),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(chatSaga);\n\nimport axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { CREATE_CHAT_REQUEST, CREATE_CHAT_SUCCESS, CREATE_CHAT_FAILURE } from '../reducers/chat';\n\nfunction watchCreateChat() {\n  return _regeneratorRuntime.wrap(function watchCreateChat$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(CREATE_CHAT_REQUEST, createChat);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function chatSaga() {\n  return _regeneratorRuntime.wrap(function chatSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([fork(watchCreateChat)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/sagas/chat.js"],"names":["watchCreateChat","chatSaga","axios","all","delay","fork","put","takeLatest","throttle","call","CREATE_CHAT_REQUEST","CREATE_CHAT_SUCCESS","CREATE_CHAT_FAILURE","createChat"],"mappings":";;oDAWWA,e;qDAIeC,Q;;AAf1B,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,QAA5C,EAAsDC,IAAtD,QAAkE,oBAAlE;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,QAIO,kBAJP;;AAQA,SAAWZ,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACG,mBAAD,EAAsBG,UAAtB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAWZ,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACNE,IAAI,CAACL,eAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CREATE_CHAT_REQUEST,\r\n    CREATE_CHAT_SUCCESS,\r\n    CREATE_CHAT_FAILURE,\r\n} from '../reducers/chat';\r\n\r\n\r\n\r\nfunction * watchCreateChat() {\r\n    yield takeLatest(CREATE_CHAT_REQUEST, createChat);\r\n}\r\n\r\nexport default function * chatSaga() {\r\n    yield all([\r\n        fork(watchCreateChat),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}