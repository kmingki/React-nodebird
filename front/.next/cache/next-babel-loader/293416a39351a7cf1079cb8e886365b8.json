{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var imageInput = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost); //대체 어떻게 add post 된다는 거지? e.target.value도 없는데\n\n    setText('');\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"k6axfNSG3d7SJ3OfuETJTfrAj7M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","imageInput","state","post","imagePaths","dispatch","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const imageInput = useRef();\r\n    const { imagePaths }=useSelector((state)=> state.post);\r\n    const dispatch = useDispatch();\r\n    \r\n    const [text, setText] = useState('');\r\n    \r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n      }, []);\r\n      const onSubmit = useCallback(() => {\r\n        dispatch(addPost);//대체 어떻게 add post 된다는 거지? e.target.value도 없는데\r\n        setText('');\r\n      }, []);\r\n    const onClickImageUpload=useCallback(()=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n          <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n          <div>\r\n            <input type=\"file\" multiple hidden ref={imageInput} />\r\n            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\r\n          </div>\r\n          <div>\r\n            {imagePaths.map((v) => {\r\n              return (\r\n                <div key={v} style={{ display: 'inline-block' }}>\r\n                  <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                  <div>\r\n                    <Button>제거</Button>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </Form>\r\n      );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}