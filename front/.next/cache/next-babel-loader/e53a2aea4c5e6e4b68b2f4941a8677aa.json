{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me && me.Followings.find(v => v.id === post.User.id); //\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    content: PropTypes.string,\n    User: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      nickname: PropTypes.string.isRequired\n    }).isRequired,\n    Images: PropTypes.string,\n    Comments: PropTypes.string\n  }).isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data","propTypes","shape","string","isRequired","content","nickname","Images","Comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA1D;AACA,QAAMC,WAAW,GAAGL,EAAE,IAAIA,EAAE,CAACM,UAAH,CAAcC,IAAd,CAAoBC,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA5C,CAA1B,CAH+B,CAG2C;;AAC1E,QAAME,aAAa,GAAGrB,WAAW,CAAC,MAAI;AAClC,QAAIe,WAAJ,EAAgB;AACZN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AACHV,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;AAcA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES,aAA5D;AAAA,cACKN,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;AAyBAR,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,KAAV,CAAgB;AACpBN,IAAAA,EAAE,EAAEjB,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAEpBC,IAAAA,OAAO,EAAC1B,SAAS,CAACwB,MAFE;AAGpBN,IAAAA,IAAI,EAAElB,SAAS,CAACuB,KAAV,CAAgB;AACpBN,MAAAA,EAAE,EAAEjB,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAEpBE,MAAAA,QAAQ,EAAE3B,SAAS,CAACwB,MAAV,CAAiBC;AAFP,KAAhB,EAGHA,UANiB;AAOpBG,IAAAA,MAAM,EAAC5B,SAAS,CAACwB,MAPG;AAQpBK,IAAAA,QAAQ,EAAC7B,SAAS,CAACwB;AARC,GAAhB,EASHC;AAVkB,CAAzB;AAaA,eAAepB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, followLoading, unfollowLoading } = useSelector((state)=>state.user);\r\n    const isFollowing = me && me.Followings.find((v)=> v.id === post.User.id);//\r\n    const onClickButton = useCallback(()=>{\r\n        if (isFollowing){\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n\r\n    return (\r\n        <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n            {isFollowing ? '언팔로우' : '팔로우'}\r\n        </Button>\r\n    );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n    post: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      content:PropTypes.string,\r\n      User: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        nickname: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n      Images:PropTypes.string,\r\n      Comments:PropTypes.string\r\n    }).isRequired,\r\n  };\r\n\r\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}