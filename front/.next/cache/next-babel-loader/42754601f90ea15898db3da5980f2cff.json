{"ast":null,"code":"import { all, delay, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SEARCH_USER_REQUEST, SEARCH_USER_SUCCESS, SEARCH_USER_FAILURE, UPLOAD_PHOTO_REQUEST, UPLOAD_PHOTO_SUCCESS, UPLOAD_PHOTO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_SUCCESS, REMOVE_FOLLOWERS_REQUEST, REMOVE_FOLLOWERS_SUCCESS, REMOVE_FOLLOWERS_FAILURE, EDIT_USER_PROFILE_REQUEST, EDIT_USER_PROFILE_SUCCESS, EDIT_USER_PROFILE_FAILURE } from '../reducers/user';\n\nfunction uploadPhotoAPI(data) {\n  return axios.post('/user/photo', data); // form data는 그대로 전송해야함\n}\n\nfunction* uploadPhoto(action) {\n  try {\n    const result = yield call(uploadPhotoAPI, action.data);\n    yield put({\n      type: UPLOAD_PHOTO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_PHOTO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction searchUserAPI(data) {\n  return axios.get(`/user/search/${data}`);\n}\n\nfunction* searchUser(action) {\n  try {\n    const result = yield call(searchUserAPI, action.data);\n    yield put({\n      type: SEARCH_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SEARCH_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n} /// delay() => Promise 가 한번 resolve 되고 나면, 미들웨어는 Saga 를 다시 작동시키면서, 다음 yield 까지 코드를 실행합니다.\n\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data); // { email, password }\n    // console.log(result.data);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n/* err.response.data :  https://xn--xy1bk56a.run/axios/guide/error-handling.html */\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/follow/${data}`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.patch(`/user/unfollow/${data}`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI() {\n  return axios.get('/user/loadFollowers');\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield loadFollowersAPI();\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI() {\n  return axios.get('/user/loadFollowings');\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield loadFollowingsAPI();\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction editUserProfileAPI(data) {\n  return axios.patch('/user/editUserProfile', data);\n}\n\nfunction* editUserProfile(action) {\n  try {\n    const result = yield call(editUserProfileAPI, action.data);\n    console.log(result.data);\n    yield put({\n      type: EDIT_USER_PROFILE_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: EDIT_USER_PROFILE_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.patch(`/user/removeFollower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data.id); // result.data.nickname\n\n    yield put({\n      type: REMOVE_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUploadPhoto() {\n  yield takeLatest(UPLOAD_PHOTO_REQUEST, uploadPhoto);\n}\n\nfunction* watchSearchUser() {\n  yield takeLatest(SEARCH_USER_REQUEST, searchUser);\n}\n\nfunction* watchEditUserProfile() {\n  yield takeLatest(EDIT_USER_PROFILE_REQUEST, editUserProfile);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWERS_REQUEST, removeFollower);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchUploadPhoto), fork(watchSearchUser), fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchEditUserProfile), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/sagas/user.js"],"names":["all","delay","fork","takeLatest","put","call","axios","SEARCH_USER_REQUEST","SEARCH_USER_SUCCESS","SEARCH_USER_FAILURE","UPLOAD_PHOTO_REQUEST","UPLOAD_PHOTO_SUCCESS","UPLOAD_PHOTO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_SUCCESS","REMOVE_FOLLOWERS_REQUEST","REMOVE_FOLLOWERS_SUCCESS","REMOVE_FOLLOWERS_FAILURE","EDIT_USER_PROFILE_REQUEST","EDIT_USER_PROFILE_SUCCESS","EDIT_USER_PROFILE_FAILURE","uploadPhotoAPI","data","post","uploadPhoto","action","result","type","err","console","error","response","searchUserAPI","get","searchUser","loadMyInfoAPI","loadMyInfo","loadUserAPI","loadUser","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","patch","follow","unfollowAPI","unfollow","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","editUserProfileAPI","editUserProfile","log","removeFollowerAPI","removeFollower","id","watchUploadPhoto","watchSearchUser","watchEditUserProfile","watchLoadMyInfo","watchLoadUser","watchFollow","watchUnfollow","watchLoadFollowers","watchLoadFollowings","watchLogIn","watchLogOut","watchSignUp","watchRemoveFollower","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, takeLatest, put, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  SEARCH_USER_REQUEST,\r\n  SEARCH_USER_SUCCESS,\r\n  SEARCH_USER_FAILURE,\r\n  UPLOAD_PHOTO_REQUEST,\r\n  UPLOAD_PHOTO_SUCCESS,\r\n  UPLOAD_PHOTO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  REMOVE_FOLLOWERS_REQUEST,\r\n  REMOVE_FOLLOWERS_SUCCESS,\r\n  REMOVE_FOLLOWERS_FAILURE,\r\n  EDIT_USER_PROFILE_REQUEST,\r\n  EDIT_USER_PROFILE_SUCCESS,\r\n  EDIT_USER_PROFILE_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction uploadPhotoAPI(data) {\r\n  return axios.post('/user/photo', data); // form data는 그대로 전송해야함\r\n}\r\n\r\nfunction* uploadPhoto(action) {\r\n  try {\r\n    const result = yield call(uploadPhotoAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_PHOTO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_PHOTO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchUserAPI(data) {\r\n  return axios.get(`/user/search/${data}`);\r\n}\r\n\r\nfunction* searchUser(action) {\r\n  try {\r\n    const result = yield call(searchUserAPI, action.data);\r\n    yield put({\r\n      type: SEARCH_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: SEARCH_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\n/// delay() => Promise 가 한번 resolve 되고 나면, 미들웨어는 Saga 를 다시 작동시키면서, 다음 yield 까지 코드를 실행합니다.\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);// { email, password }\r\n    // console.log(result.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n/* err.response.data :  https://xn--xy1bk56a.run/axios/guide/error-handling.html */\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/follow/${data}`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n  return axios.patch(`/user/unfollow/${data}`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(unfollowAPI, action.data);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadFollowersAPI() {\r\n  return axios.get('/user/loadFollowers');\r\n}\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield loadFollowersAPI();\r\n\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowingsAPI() {\r\n  return axios.get('/user/loadFollowings');\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield loadFollowingsAPI();\r\n\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction editUserProfileAPI(data) {\r\n  return axios.patch('/user/editUserProfile', data);\r\n}\r\n\r\nfunction* editUserProfile(action) {\r\n  try {\r\n    const result = yield call(editUserProfileAPI, action.data);\r\n    console.log(result.data);\r\n    yield put({\r\n      type: EDIT_USER_PROFILE_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: EDIT_USER_PROFILE_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeFollowerAPI(data) {\r\n  return axios.patch(`/user/removeFollower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const result = yield call(removeFollowerAPI, action.data.id); // result.data.nickname\r\n    yield put({\r\n      type: REMOVE_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadPhoto() {\r\n  yield takeLatest(UPLOAD_PHOTO_REQUEST, uploadPhoto);\r\n}\r\nfunction* watchSearchUser() {\r\n  yield takeLatest(SEARCH_USER_REQUEST, searchUser);\r\n}\r\n\r\nfunction* watchEditUserProfile() {\r\n  yield takeLatest(EDIT_USER_PROFILE_REQUEST, editUserProfile);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWERS_REQUEST, removeFollower);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchUploadPhoto),\r\n    fork(watchSearchUser),\r\n    fork(watchRemoveFollower),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchEditUserProfile),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}