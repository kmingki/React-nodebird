{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\settings\\\\profile.js\";\nimport Modal from 'react-modal';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nconst settingProfile = () => {\n  const router = useRouter();\n  const {\n    me\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true // The modal should always be shown on page load, it is the 'page'\n      ,\n      onRequestClose: () => router.push(`/user/${me.id}`),\n      contentLabel: \"Post modal\",\n      style: customStyles,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default settingProfile;","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/settings/profile.js"],"names":["Modal","useSelector","useRouter","wrapper","axios","LOAD_MY_INFO_REQUEST","END","customStyles","content","top","left","right","bottom","marginRight","transform","settingProfile","router","me","state","user","push","id","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,GAAT,QAAoB,YAApB;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE;AANJ;AADQ,CAArB;;AAWA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAShB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AAEA,sBACI;AAAA,2BACF,QAAC,KAAD;AACE,MAAA,MAAM,EAAE,IADV,CACgB;AADhB;AAEE,MAAA,cAAc,EAAE,MAAMH,MAAM,CAACI,IAAP,CAAa,SAAQH,EAAE,CAACI,EAAG,EAA3B,CAFxB;AAGE,MAAA,YAAY,EAAC,YAHf;AAIE,MAAA,KAAK,EAAEd,YAJT;AAAA,6BAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADE,mBADJ;AAaH,CAjBD;;AAmBA,OAAO,MAAMe,kBAAkB,GAAGnB,OAAO,CAACmB,kBAAR,CAA2B,MAAOC,OAAP,IAAiB;AAC1E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAaF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAjC,GAA0C,EAAzD;AACApB,EAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBpB,IAAAA,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAE1B;AADa,GAAvB;AAIAkB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBxB,GAAvB,EAX0E,CAW7C;;AAC7B,QAAMiB,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAbiC,CAA3B;AAeP,eAAelB,cAAf","sourcesContent":["import Modal from 'react-modal';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport axios from 'axios';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { END } from 'redux-saga';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\nconst settingProfile = () => {\r\n    const router = useRouter();\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    return (\r\n        <>\r\n      <Modal\r\n        isOpen={true} // The modal should always be shown on page load, it is the 'page'\r\n        onRequestClose={() => router.push(`/user/${me.id}`)}\r\n        contentLabel=\"Post modal\"\r\n        style={customStyles}\r\n      >\r\n          <p>hello</p>\r\n      </Modal>\r\n    </>\r\n    );\r\n\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default settingProfile;"]},"metadata":{},"sourceType":"module"}