{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport UPDATE_ROOM_LIST from './../reducers/chat';\nexport var useJoinRoom = function useJoinRoom(socket, id) {\n  _s();\n\n  var requestJoin = function requestJoin() {\n    socket.emit('joinRoom', id);\n    /*\r\n    return () => {\r\n        console.log(`Leave Room: ${roomId}`);\r\n        socket.emit('leaveRoom', roomId);\r\n    };\r\n    */\n  };\n\n  useEffect(requestJoin, []);\n};\n\n_s(useJoinRoom, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport var useWantingRoom = function useWantingRoom(socket, userId, dispatch) {\n  _s2();\n\n  var ms = useMemo(function () {\n    return socket;\n  }, [socket]);\n\n  var roomData = function roomData() {\n    ms.emit('roomListDataRequest', userId, function (res) {\n      dispatch({\n        type: UPDATE_ROOM_LIST,\n        data: res.rooms\n      });\n    });\n    ms.on('updateRoomList', function (room) {\n      var users = room.participants;\n      users.forEach(function (u) {\n        if (u.id === userId) {\n          dispatch({\n            type: UPDATE_ROOM_LIST,\n            data: [].concat(_toConsumableArray(rooms), [room])\n          });\n        }\n      });\n    });\n  };\n\n  useEffect(roomData, []);\n};\n\n_s2(useWantingRoom, \"zkicw13ExdCMcpf8px4IA4vetoc=\");","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/hooks/chatHooks.js"],"names":["useEffect","useMemo","useState","UPDATE_ROOM_LIST","useJoinRoom","socket","id","requestJoin","emit","useWantingRoom","userId","dispatch","ms","roomData","res","type","data","rooms","on","room","users","participants","forEach","u"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,EAAT,EAAgB;AAAA;;AACvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtBF,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBF,EAAxB;AAEA;AACR;AACA;AACA;AACA;AACA;AACK,GAVD;;AAYAN,EAAAA,SAAS,CAACO,WAAD,EAAc,EAAd,CAAT;AACH,CAdM;;GAAMH,W;;AAgBb,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,MAAD,EAASK,MAAT,EAAiBC,QAAjB,EAA8B;AAAA;;AACxD,MAAMC,EAAE,GAAGX,OAAO,CAAC;AAAA,WAAII,MAAJ;AAAA,GAAD,EAAa,CAACA,MAAD,CAAb,CAAlB;;AAEA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBD,IAAAA,EAAE,CAACJ,IAAH,CAAQ,qBAAR,EAA+BE,MAA/B,EAAuC,UAACI,GAAD,EAAS;AAC5CH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEZ,gBADD;AAELa,QAAAA,IAAI,EAAEF,GAAG,CAACG;AAFL,OAAD,CAAR;AAIH,KALD;AAOAL,IAAAA,EAAE,CAACM,EAAH,CAAM,gBAAN,EAAwB,UAACC,IAAD,EAAQ;AAC5B,UAAMC,KAAK,GAAGD,IAAI,CAACE,YAAnB;AAEAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,CAAC,EAAI;AACf,YAAIA,CAAC,CAACjB,EAAF,KAASI,MAAb,EAAqB;AACjBC,UAAAA,QAAQ,CAAC;AACLI,YAAAA,IAAI,EAAEZ,gBADD;AAELa,YAAAA,IAAI,+BAAMC,KAAN,IAAaE,IAAb;AAFC,WAAD,CAAR;AAIH;AACJ,OAPD;AAQH,KAXD;AAYH,GApBD;;AAsBAnB,EAAAA,SAAS,CAACa,QAAD,EAAW,EAAX,CAAT;AACH,CA1BM;;IAAMJ,c","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\r\nimport UPDATE_ROOM_LIST from './../reducers/chat';\r\n\r\nexport const useJoinRoom = (socket, id) => {\r\n    const requestJoin = () => {\r\n       \r\n        socket.emit('joinRoom', id);\r\n\r\n        /*\r\n        return () => {\r\n            console.log(`Leave Room: ${roomId}`);\r\n            socket.emit('leaveRoom', roomId);\r\n        };\r\n        */\r\n    };\r\n\r\n    useEffect(requestJoin, []);\r\n};\r\n\r\nexport const useWantingRoom = (socket, userId, dispatch) => {\r\n    const ms = useMemo(()=>socket, [socket]);\r\n\r\n    const roomData = () => {\r\n        ms.emit('roomListDataRequest', userId, (res) => {\r\n            dispatch({\r\n                type: UPDATE_ROOM_LIST,\r\n                data: res.rooms\r\n            });\r\n        })\r\n\r\n        ms.on('updateRoomList', (room)=>{\r\n            const users = room.participants;\r\n\r\n            users.forEach(u => {\r\n                if (u.id === userId) {\r\n                    dispatch({\r\n                        type: UPDATE_ROOM_LIST,\r\n                        data: [...rooms, room]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(roomData, []);\r\n}"]},"metadata":{},"sourceType":"module"}