{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport PostImages from './PostImages';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardWrapper = styled.div.withConfig({\n  displayName: \"PostCard__CardWrapper\",\n  componentId: \"sc-10lmnn1-0\"\n})([\"margin-bottom:20px;\"]);\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  moment.locale('ko');\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      likePostError = _useSelector.likePostError;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id; //me 있으면 id 없으면 undefined\n\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [post, id]);\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [post, id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [post, id]);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [post, id]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, _this) //이미지가 반드시 한개 이상일때 실행된다.\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, _this)\n      }, \"elipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, _this)],\n      extra: /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, _this),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          \"float\": 'right'\n        },\n        children: moment(post.createdAt).startOf('day').fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"user/\".concat(post.User.id),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: post.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 64\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 61\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, _this),\n        title: post.User.nickname,\n        description: post.Retweet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Card, {\n            cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n              images: post.Retweet.Images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 54\n            }, _this),\n            extra: /*#__PURE__*/_jsxDEV(FollowButton, {\n              post: post.Retweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 28\n            }, _this),\n            children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"user/\".concat(post.Retweet.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: post.Retweet.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 80\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 77\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, _this),\n              title: post.Retweet.User.nickname,\n              description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n                postData: post.Retweet.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 38\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: function renderItem(item) {\n          //item은 post.Comments\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname //item.User.nickname\n              ,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/user',\n                  query: {\n                    id: item.User.id\n                  }\n                },\n                as: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 28\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"1u0GuXhRn5Iez42RsF6au8Ye4vE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    //shape을 이용하면 더 정확하게 prop정의 할수있다.\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  })\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","PropTypes","useSelector","useDispatch","Card","Popover","Button","List","Comment","Avatar","HeartTwoTone","MessageOutlined","EllipsisOutlined","HeartOutlined","RetweetOutlined","styled","Link","PostImages","PostCardContent","CommentForm","FollowButton","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","moment","CardWrapper","div","PostCard","post","locale","dispatch","state","removePostLoading","likePostError","commentFormOpened","setCommentFormOpened","user","me","id","onUnlike","alert","type","data","onLike","onToggleComment","prev","onRemovePost","onRetweet","liked","Likers","find","v","Images","User","createdAt","startOf","fromNow","nickname","Retweet","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect }from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\r\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nimport PostImages from './PostImages';\r\nimport PostCardContent from './PostCardContent';\r\nimport CommentForm from './CommentForm';\r\nimport FollowButton from './FollowButton';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\r\nimport moment from 'moment';\r\n\r\nconst CardWrapper = styled.div`\r\n    margin-bottom: 20px;\r\n`;\r\nconst PostCard = ({ post }) => {\r\n\r\n    moment.locale('ko');\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading, likePostError } = useSelector((state)=>state.post);\r\n    const [ commentFormOpened, setCommentFormOpened ] = useState(false);\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id; //me 있으면 id 없으면 undefined\r\n\r\n    const onUnlike = useCallback(()=>{\r\n\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id\r\n        });\r\n    }, [post, id]);\r\n\r\n    const onLike = useCallback(() => {\r\n        \r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: post.id,\r\n        });\r\n\r\n      }, [post, id]);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n\r\n    const onRemovePost = useCallback(()=>{\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [post, id]);\r\n\r\n    const onRetweet = useCallback(() => {\r\n        if (!id) {\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n\r\n        return dispatch({\r\n            type: RETWEET_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, [post, id]);\r\n    const liked = post.Likers.find(v=> v.id === id);\r\n\r\n    return(\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images}/>}//이미지가 반드시 한개 이상일때 실행된다.\r\n            actions={[\r\n                <RetweetOutlined key=\"retweet\" onClick={onRetweet}/>,\r\n                liked \r\n                ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n                : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                <MessageOutlined key=\"message\" onClick={onToggleComment}/>,\r\n                <Popover \r\n                key=\"elipsis\" \r\n                content={(\r\n                    <Button.Group>\r\n                        {id && post.User.id === id \r\n                        ? (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                        </>\r\n                        )\r\n                     : <Button>신고</Button>}\r\n                    </Button.Group>\r\n                )}\r\n                >\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            extra={<FollowButton post={post} />}\r\n            >\r\n                <span style={{ float: 'right' }}>{moment(post.createdAt).startOf('day').fromNow()}</span>\r\n                <Card.Meta\r\n                avatar={<Link href={`user/${post.User.id}`}><a><Avatar>{post.User.nickname[0]}</Avatar></a></Link>}\r\n                title={post.User.nickname}\r\n                description={post.Retweet ?\r\n                    <>\r\n                    <p>{`${post.User.nickname}님이 리트윗하셨습니다`}</p>\r\n                    <Card\r\n                    cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images}/>}\r\n                    extra={<FollowButton post={post.Retweet} />}\r\n                    >\r\n                        <Card.Meta\r\n                        avatar={<Link href={`user/${post.Retweet.User.id}`}><a><Avatar>{post.Retweet.User.nickname[0]}</Avatar></a></Link>}\r\n                        title={post.Retweet.User.nickname}\r\n                        description={<PostCardContent postData={post.Retweet.content}/>}\r\n                        />\r\n                    </Card>\r\n                    </>\r\n                    : <PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                <CommentForm post={post} />\r\n                <List\r\n                header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={post.Comments || []}\r\n                renderItem={(item) => { //item은 post.Comments\r\n                    return(\r\n                    <li>\r\n                        <Comment \r\n                        author={item.User.nickname}//item.User.nickname\r\n                        avatar={(\r\n                            <Link href={{ pathname: '/user', query: { id: item.User.id }}} as={`/user/${item.User.id}`}>                          \r\n                        <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                        </Link>\r\n                        )}\r\n                        content={item.content}\r\n                        />\r\n                    </li>\r\n                    );\r\n                }\r\n            }\r\n                />                 \r\n                </>\r\n            )}\r\n        </CardWrapper>          \r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({ //shape을 이용하면 더 정확하게 prop정의 할수있다.\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.string,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.any),\r\n        Likers: PropTypes.arrayOf(PropTypes.object)\r\n    }),\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}