{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nimport UPDATE_ROOM_LIST from './../reducers/chat';\nexport const useJoinRoom = (socket, id) => {\n  const requestJoin = () => {\n    socket.emit('joinRoom', id);\n    /*\r\n    return () => {\r\n        console.log(`Leave Room: ${roomId}`);\r\n        socket.emit('leaveRoom', roomId);\r\n    };\r\n    */\n  };\n\n  useEffect(requestJoin, []);\n};\nexport const useWantingRoom = (socket, userId, dispatch) => {\n  const ms = useMemo(() => socket, [socket]);\n\n  const roomData = () => {\n    ms.emit('roomListDataRequest', userId, res => {\n      dispatch({\n        type: UPDATE_ROOM_LIST,\n        data: res.rooms\n      });\n    });\n    ms.on('updateRoomList', room => {\n      const users = room.participants;\n      users.forEach(u => {\n        if (u.id === userId) {\n          setRooms([...rooms, room]);\n        }\n      });\n    });\n  };\n\n  useEffect(roomData, []);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/hooks/chatHooks.js"],"names":["useEffect","useMemo","useState","UPDATE_ROOM_LIST","useJoinRoom","socket","id","requestJoin","emit","useWantingRoom","userId","dispatch","ms","roomData","res","type","data","rooms","on","room","users","participants","forEach","u","setRooms"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AACvC,QAAMC,WAAW,GAAG,MAAM;AAEtBF,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBF,EAAxB;AAEA;AACR;AACA;AACA;AACA;AACA;AACK,GAVD;;AAYAN,EAAAA,SAAS,CAACO,WAAD,EAAc,EAAd,CAAT;AACH,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAG,CAACJ,MAAD,EAASK,MAAT,EAAiBC,QAAjB,KAA8B;AACxD,QAAMC,EAAE,GAAGX,OAAO,CAAC,MAAII,MAAL,EAAa,CAACA,MAAD,CAAb,CAAlB;;AAEA,QAAMQ,QAAQ,GAAG,MAAM;AACnBD,IAAAA,EAAE,CAACJ,IAAH,CAAQ,qBAAR,EAA+BE,MAA/B,EAAwCI,GAAD,IAAS;AAC5CH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEZ,gBADD;AAELa,QAAAA,IAAI,EAAEF,GAAG,CAACG;AAFL,OAAD,CAAR;AAIH,KALD;AAMAL,IAAAA,EAAE,CAACM,EAAH,CAAM,gBAAN,EAAyBC,IAAD,IAAQ;AAC5B,YAAMC,KAAK,GAAGD,IAAI,CAACE,YAAnB;AAEAD,MAAAA,KAAK,CAACE,OAAN,CAAcC,CAAC,IAAI;AACf,YAAIA,CAAC,CAACjB,EAAF,KAASI,MAAb,EAAqB;AACjBc,UAAAA,QAAQ,CAAC,CAAC,GAAGP,KAAJ,EAAWE,IAAX,CAAD,CAAR;AACH;AACJ,OAJD;AAKH,KARD;AASH,GAhBD;;AAkBAnB,EAAAA,SAAS,CAACa,QAAD,EAAW,EAAX,CAAT;AACH,CAtBM","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\r\nimport UPDATE_ROOM_LIST from './../reducers/chat';\r\nexport const useJoinRoom = (socket, id) => {\r\n    const requestJoin = () => {\r\n       \r\n        socket.emit('joinRoom', id);\r\n\r\n        /*\r\n        return () => {\r\n            console.log(`Leave Room: ${roomId}`);\r\n            socket.emit('leaveRoom', roomId);\r\n        };\r\n        */\r\n    };\r\n\r\n    useEffect(requestJoin, []);\r\n}\r\n\r\nexport const useWantingRoom = (socket, userId, dispatch) => {\r\n    const ms = useMemo(()=>socket, [socket]);\r\n\r\n    const roomData = () => {\r\n        ms.emit('roomListDataRequest', userId, (res) => {\r\n            dispatch({\r\n                type: UPDATE_ROOM_LIST,\r\n                data: res.rooms\r\n            });\r\n        })\r\n        ms.on('updateRoomList', (room)=>{\r\n            const users = room.participants;\r\n\r\n            users.forEach(u => {\r\n                if (u.id === userId) {\r\n                    setRooms([...rooms, room]);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(roomData, []);\r\n}"]},"metadata":{},"sourceType":"module"}