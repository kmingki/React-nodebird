{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\profile.js\";\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport { useRouter } from 'next/router';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST\n    });\n  }, []);\n\n  if (!me) {\n    alert('로그인 해주세요');\n    return router.replace('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/profile.js"],"names":["React","useEffect","Head","AppLayout","useRouter","NicknameEditForm","FollowList","useSelector","useDispatch","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","axios","END","Profile","router","dispatch","me","state","user","type","alert","replace","Followings","Followers","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,sBAAT,EAAiCC,uBAAjC,EAA0DC,oBAA1D,QAAsF,kBAAtF;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAASX,WAAW,CAAEY,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA1B;AAEAnB,EAAAA,SAAS,CAAC,MAAI;AAEVgB,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAIAQ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAIH,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAI,CAACQ,EAAL,EAAS;AACLI,IAAAA,KAAK,CAAC,UAAD,CAAL;AACA,WAAON,MAAM,CAACO,OAAP,CAAe,GAAf,CAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA,QAAC,SAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,iCAAnB;AAA4B,QAAA,IAAI,EAAEL,EAAE,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,iCAAnB;AAA4B,QAAA,IAAI,EAAEN,EAAE,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAYH,CAlCD;;AAoCA,OAAO,MAAMC,kBAAkB,GAAGd,OAAO,CAACc,kBAAR,CAA2B,MAAOC,OAAP,IAAiB;AAC1E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAaF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAjC,GAA0C,EAAzD;AACAf,EAAAA,KAAK,CAACkB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBf,IAAAA,KAAK,CAACkB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAchB,QAAd,CAAuB;AACnBI,IAAAA,IAAI,EAAEV;AADa,GAAvB;AAIAgB,EAAAA,OAAO,CAACM,KAAR,CAAchB,QAAd,CAAuBH,GAAvB,EAX0E,CAW7C;;AAC7B,QAAMa,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAbiC,CAA3B;AAeP,eAAepB,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { useRouter } from 'next/router';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nconst Profile = () => {\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state)=>state.user);\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n        });\r\n\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n        });\r\n\r\n    }, []);\r\n\r\n    if (!me) {\r\n        alert('로그인 해주세요');\r\n        return router.replace('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>   \r\n            </Head>\r\n        <AppLayout>\r\n            <NicknameEditForm />\r\n            <FollowList header=\"팔로잉 목록\" data={me.Followings} />\r\n            <FollowList header=\"팔로워 목록\" data={me.Followers} />\r\n        </AppLayout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}