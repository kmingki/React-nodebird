{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { CREATE_CHAT_REQUEST, CREATE_CHAT_SUCCESS, CREATE_CHAT_FAILURE } from '../reducers/chat';\n\nfunction createChatAPI(data) {\n  console.log('saga done');\n  return axios.post('/room', data);\n}\n\nfunction* createChat(action) {\n  try {\n    const result = yield call(createChatAPI, action.data);\n    yield put({\n      type: CREATE_CHAT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CREATE_CHAT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchCreateChat() {\n  yield takeLatest(CREATE_CHAT_REQUEST, createChat);\n}\n\nexport default function* chatSaga() {\n  yield all([fork(watchCreateChat)]);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/sagas/chat.js"],"names":["axios","all","delay","fork","put","takeLatest","throttle","call","CREATE_CHAT_REQUEST","CREATE_CHAT_SUCCESS","CREATE_CHAT_FAILURE","createChatAPI","data","console","log","post","createChat","action","result","type","err","error","response","watchCreateChat","chatSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,QAA5C,EAAsDC,IAAtD,QAAkE,oBAAlE;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,QAIO,kBAJP;;AAOA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAOd,KAAK,CAACe,IAAN,CAAW,OAAX,EAAoBH,IAApB,CAAP;AACH;;AAED,UAAWI,UAAX,CAAsBC,MAAtB,EAA8B;AAC1B,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACI,aAAD,EAAgBM,MAAM,CAACL,IAAvB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV,mBADA;AAENG,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOQ,GAAP,EAAY;AACVP,IAAAA,OAAO,CAACQ,KAAR,CAAcD,GAAd;AACA,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAET,mBADA;AAENW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAWW,eAAX,GAA6B;AACzB,QAAMlB,UAAU,CAACG,mBAAD,EAAsBQ,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAWQ,QAAX,GAAsB;AACjC,QAAMvB,GAAG,CAAC,CACNE,IAAI,CAACoB,eAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CREATE_CHAT_REQUEST,\r\n    CREATE_CHAT_SUCCESS,\r\n    CREATE_CHAT_FAILURE,\r\n} from '../reducers/chat';\r\n\r\n\r\nfunction createChatAPI(data) {\r\n    console.log('saga done');\r\n    return axios.post('/room', data); \r\n}\r\n\r\nfunction * createChat(action) {\r\n    try{\r\n        const result = yield call(createChatAPI, action.data);\r\n        yield put({\r\n            type: CREATE_CHAT_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CREATE_CHAT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction * watchCreateChat() {\r\n    yield takeLatest(CREATE_CHAT_REQUEST, createChat);\r\n}\r\n\r\nexport default function * chatSaga() {\r\n    yield all([\r\n        fork(watchCreateChat),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}