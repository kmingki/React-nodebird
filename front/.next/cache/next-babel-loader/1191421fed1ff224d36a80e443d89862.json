{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id; //있으면 id 없으면 undefined\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginButtom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: propTypes.shape({\n    //shape을 이용하면 더 정확하게 prop정의 할수있다.\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    createdAt: propTypes.object,\n    Comments: propTypes.arrayOf(propTypes.any),\n    Images: propTypes.arrayOf(propTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","propTypes","useSelector","Card","Popover","Button","Avatar","HeartTwoTone","MessageOutlined","EllipsisOutlined","HeartOutlined","RetweetOutlined","PostImages","PostCard","post","me","state","user","id","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginButtom","Images","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback }from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Popover, Button,Avatar } from 'antd';\r\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id; //있으면 id 없으면 undefined\r\n\r\n    const [ liked, setLiked ] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev) => !prev);\r\n    },[]);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n\r\n    return(\r\n        <div style={{ marginButtom: 20 }}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n            actions={[\r\n                <RetweetOutlined key=\"retweet\" />,\r\n                liked \r\n                ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                <MessageOutlined key=\"message\" onClick={onToggleComment}/>,\r\n                <Popover key=\"more\" content={(\r\n                    <Button.Group>\r\n                        {id && post.User.id === id \r\n                        ? (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\">삭제</Button>\r\n                        </>\r\n                        )\r\n                     : <Button>신고</Button>}\r\n                    </Button.Group>\r\n                )}\r\n                >\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    댓글부분\r\n                </div>\r\n            )}\r\n        </div>          \r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: propTypes.shape({ //shape을 이용하면 더 정확하게 prop정의 할수있다.\r\n        id:propTypes.number,\r\n        User:propTypes.object,\r\n        content:propTypes.string,\r\n        createdAt:propTypes.object,\r\n        Comments:propTypes.arrayOf(propTypes.any),\r\n        Images: propTypes.arrayOf(propTypes.any)\r\n    }),\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}