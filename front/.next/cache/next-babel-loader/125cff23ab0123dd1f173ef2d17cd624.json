{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    addCommentDone,\n    addCommentLoading,\n    addCommentError\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  useEffect(() => {\n    if (addCommentError) {\n      alert(addCommentError);\n    }\n  }, [addCommentError]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: \"addCommentLoading\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    content: PropTypes.string,\n    User: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      nickname: PropTypes.string.isRequired\n    }).isRequired,\n    Images: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","addCommentDone","addCommentLoading","addCommentError","state","id","user","me","commentText","onChangeCommentText","setCommentText","alert","onSubmitComment","type","data","content","userId","postId","position","margin","right","bottom","propTypes","shape","number","isRequired","string","User","nickname","Images","Comments","arrayOf","object"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST  } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { addCommentDone, addCommentLoading, addCommentError } = useSelector((state)=>state.post);\r\n  const id = useSelector((state)=>state.user.me?.id);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n  useEffect(()=>{\r\n    if(addCommentDone){\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  useEffect(()=>{\r\n    if(addCommentError) {\r\n      alert(addCommentError);\r\n    }\r\n  }, [addCommentError]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: {\r\n        content : commentText,\r\n        userId : id,\r\n        postId : post.id\r\n      }\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n        <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\" loading=\"addCommentLoading\">삐약</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    content:PropTypes.string,\r\n    User: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    Images:PropTypes.string,\r\n    Comments:PropTypes.arrayOf(PropTypes.object)\r\n  }).isRequired,\r\n};\r\n\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}