{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\nimport produce from \"immer\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n}; //action\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POSTS_REQUEST = 'ADD_POSTS_REQUEST';\nexport const ADD_POSTS_SUCCESS = 'ADD_POSTS_SUCCESS';\nexport const ADD_POSTS_FAILURE = 'ADD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'; //Reducers : action을 통해 어떤 행동을 정의했다면, 그 결과 상태가 어떻게 바뀌는지 특정하게 되는 함수\n//produce state, 상태의 결과 함수\n//return produce()인 것\n//draft가 state로 바뀌는것\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        }); //push() : 배열의 맨뒤에 push\n\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        draft.likePostError = null;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostDone = false;\n      draft.likePostError = action.error;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unLikePostLoading = true;\n      draft.unLikePostDone = false;\n      draft.unLikePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unLikePostLoading = false;\n        draft.unLikePostDone = true;\n        draft.unLikePostError = null;\n        break;\n      }\n\n    case UNLIKE_POST_FAILURE:\n      draft.unLikePostLoading = false;\n      draft.unLikePostDone = false;\n      draft.unLikePostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts); //action.data = load한 배열, action.data + draft.mainPosts\n\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.imagePaths = [];\n      draft.mainPosts.unshift(action.data); //새로운 요소를 배열의 맨 앞쪽에 추가하고, 새로운 길이반환\n\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.postId);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostDone = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        draft.addCommentError = null;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = false;\n      break;\n\n    case UPLOAD_IMAGES_SUCCESS:\n      draft.imagePaths = action.data;\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesDone = true;\n      draft.uploadImagesError = false;\n      break;\n\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = action.error;\n      break;\n\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n\n    case RETWEET_SUCCESS:\n      draft.retweetLoading = false;\n      draft.retweetDone = true;\n      draft.retweetError = null;\n      break;\n\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetDone = false;\n      draft.retweetError = action.error;\n      break;\n\n    default:\n      break;\n    //return draft해도 되지않나...\n  }\n});\n\nexport default reducer;\n/*\r\nhttps://react.vlpt.us/redux/01-keywords.html\r\n*/","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POSTS_REQUEST","ADD_POSTS_SUCCESS","ADD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","type","filter","v","i","data","post","find","id","PostId","Likers","push","UserId","error","concat","length","unshift","postId","Comments"],"mappings":"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","sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\nimport produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths:[],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unLikePostLoading: false,\r\n  unLikePostDone: false,\r\n  unLikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone : false,\r\n  retweetError: null,\r\n};\r\n\r\n//action\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POSTS_REQUEST = 'ADD_POSTS_REQUEST';\r\nexport const ADD_POSTS_SUCCESS = 'ADD_POSTS_SUCCESS';\r\nexport const ADD_POSTS_FAILURE = 'ADD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n//Reducers : action을 통해 어떤 행동을 정의했다면, 그 결과 상태가 어떻게 바뀌는지 특정하게 되는 함수\r\n//produce state, 상태의 결과 함수\r\n//return produce()인 것\r\n//draft가 state로 바뀌는것\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({ id: action.data.UserId }); //push() : 배열의 맨뒤에 push\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      draft.likePostError = null;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unLikePostLoading = true;\r\n      draft.unLikePostDone = false;\r\n      draft.unLikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v)=> v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v)=> v.id !== action.data.UserId);\r\n      draft.unLikePostLoading = false;\r\n      draft.unLikePostDone = true;\r\n      draft.unLikePostError = null;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unLikePostLoading = false;\r\n      draft.unLikePostDone = false;\r\n      draft.unLikePostError = action.error;\r\n      break;\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);//action.data = load한 배열, action.data + draft.mainPosts\r\n      draft.hasMorePosts = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POSTS_FAILURE: \r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone=false;\r\n      draft.addPostError=null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone=true;\r\n      draft.imagePaths = [];\r\n      draft.mainPosts.unshift(action.data);//새로운 요소를 배열의 맨 앞쪽에 추가하고, 새로운 길이반환\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading=true;\r\n      draft.removePostDone=false;\r\n      draft.removePostError=null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading=false;\r\n      draft.removePostDone=true;\r\n      draft.mainPosts=draft.mainPosts.filter((v)=> v.id !== action.data.postId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading=false;\r\n      draft.removePostDone=false;\r\n      draft.removePostError=action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone=false;\r\n      draft.addCommentError= null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v)=>v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading=false;\r\n      draft.addCommentDone=true;\r\n      draft.addCommentError= null;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading=false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = false;\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS:\r\n      draft.imagePaths=action.data;\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = true;\r\n      draft.uploadImagesError = false;\r\n      break;\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n    case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    default: \r\n      break; //return draft해도 되지않나...\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default reducer;\r\n/*\r\nhttps://react.vlpt.us/redux/01-keywords.html\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}