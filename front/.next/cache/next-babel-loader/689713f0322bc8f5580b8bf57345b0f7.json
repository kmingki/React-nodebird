{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\main.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { useMediaQuery } from 'react-responsive';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport MobileLayout from '../components/layout/MobileLayout.js';\nimport DesktopLayout from '../components/layout/DesktopLayout.js';\nimport TabletLayout from '../components/layout/tabletLayout';\nimport SideBar from '../components/SideBar';\nimport Title from '../components/layout/Title';\nimport Menu from '../components/layout/Menu';\nimport SideMenu from '../components/layout/SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  const isMobile = useMediaQuery({\n    maxWidth: 500\n  }); // ~500\n\n  const isTablet = useMediaQuery({\n    minWidth: 501,\n    maxWidth: 1023\n  }); // 501~1023\n\n  const isDesktop = useMediaQuery({\n    minWidth: 1024\n  });\n  useEffect(() => {\n    if (retweetError) {\n      return alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      // scrollY:스크롤을 얼마나 내렸는지 clientHeight: 화면길이\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id // 마지막 post의 id\n\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  useEffect(() => {\n    if (!me) {\n      return Router.push('/');\n    }\n  }, [me]);\n\n  const mainContents = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true); // 왜 props로 줬냐\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isDesktop && /*#__PURE__*/_jsxDEV(DesktopLayout, {\n      Side: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isTablet && /*#__PURE__*/_jsxDEV(TabletLayout, {\n      SideMenu: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }, this),\n      Side: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 51\n      }, this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(MobileLayout, {\n      Header: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this),\n      Menu: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END); // REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/main.js"],"names":["React","useEffect","useDispatch","useSelector","END","axios","Router","useMediaQuery","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","MobileLayout","DesktopLayout","TabletLayout","SideBar","Title","Menu","SideMenu","Main","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","post","isMobile","maxWidth","isTablet","minWidth","isDesktop","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","data","length","id","addEventListener","removeEventListener","push","mainContents","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAASnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,gBAA3B;AAA6CC,IAAAA;AAA7C,MAA8DzB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACM,IAAlB,CAA/E;AACA,QAAMC,QAAQ,GAAGvB,aAAa,CAAC;AAAEwB,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA9B,CAJiB,CAIkC;;AACnD,QAAMC,QAAQ,GAAGzB,aAAa,CAAC;AAAE0B,IAAAA,QAAQ,EAAE,GAAZ;AAAiBF,IAAAA,QAAQ,EAAE;AAA3B,GAAD,CAA9B,CALiB,CAKkD;;AACnE,QAAMG,SAAS,GAAG3B,aAAa,CAAC;AAAE0B,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA/B;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,YAAJ,EAAkB;AAChB,aAAOO,KAAK,CAACP,YAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMA3B,EAAAA,SAAS,CAAC,MAAM;AACd,aAASmC,QAAT,GAAoB;AAClB;AACA,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,YAAIhB,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACrCN,UAAAA,QAAQ,CAAC;AACPsB,YAAAA,IAAI,EAAEjC,kBADC;AAEPkC,YAAAA,IAAI,gBAAEnB,SAAS,CAACA,SAAS,CAACoB,MAAV,GAAmB,CAApB,CAAX,+CAAE,WAAiCC,EAFhC,CAEoC;;AAFpC,WAAD,CAAR;AAID;AACF;AACF;;AACDT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACX,SAAD,EAAYC,YAAZ,EAA0BC,gBAA1B,CAhBM,CAAT;AAkBA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACqB,EAAL,EAAS;AACP,aAAOhB,MAAM,CAAC2C,IAAP,CAAY,GAAZ,CAAP;AACD;AACF,GAJQ,EAIN,CAAC3B,EAAD,CAJM,CAAT;;AAMA,QAAM4B,YAAY,gBAChB;AAAA,eACI5B,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADV,EAEGG,SAAS,CAAC0B,GAAV,CAAetB,IAAD,iBAAW,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACiB,EAApB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAFH;AAAA,kBADF,CAtCiB,CA6CjB;;;AACA,sBACE;AAAA,eACIZ,SAAS,iBACX,QAAC,aAAD;AAAe,MAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAArB;AAAA,gBACGgB;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAMIlB,QAAQ,iBACV,QAAC,YAAD;AAAc,MAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAxB;AAAsC,MAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAA5C;AAAA,gBACGkB;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,EAWIpB,QAAQ,iBACV,QAAC,YAAD;AAAc,MAAA,MAAM,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAiC,MAAA,IAAI,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAvC;AAAA,gBACGoB;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAmBD,CAjED;;AAmEA,OAAO,MAAME,kBAAkB,GAAGxC,OAAO,CAACwC,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAjD,EAAAA,KAAK,CAACoD,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBjD,IAAAA,KAAK,CAACoD,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAActC,QAAd,CAAuB;AACrBsB,IAAAA,IAAI,EAAEhC;AADe,GAAvB;AAGA0C,EAAAA,OAAO,CAACM,KAAR,CAActC,QAAd,CAAuB;AACrBsB,IAAAA,IAAI,EAAEjC;AADe,GAAvB;AAIA2C,EAAAA,OAAO,CAACM,KAAR,CAActC,QAAd,CAAuBjB,GAAvB,EAd8E,CAcjD;;AAC7B,QAAMiD,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAhBiC,CAA3B;AAkBP,eAAezC,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport Router from 'next/router';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport MobileLayout from '../components/layout/MobileLayout.js';\r\nimport DesktopLayout from '../components/layout/DesktopLayout.js';\r\nimport TabletLayout from '../components/layout/tabletLayout';\r\nimport SideBar from '../components/SideBar';\r\nimport Title from '../components/layout/Title';\r\nimport Menu from '../components/layout/Menu';\r\nimport SideMenu from '../components/layout/SideMenu';\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector((state) => state.post);\r\n  const isMobile = useMediaQuery({ maxWidth: 500 }); // ~500\r\n  const isTablet = useMediaQuery({ minWidth: 501, maxWidth: 1023 }); // 501~1023\r\n  const isDesktop = useMediaQuery({ minWidth: 1024 });\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      return alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      // scrollY:스크롤을 얼마나 내렸는지 clientHeight: 화면길이\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            data: mainPosts[mainPosts.length - 1]?.id, // 마지막 post의 id\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n  useEffect(() => {\r\n    if (!me) {\r\n      return Router.push('/');\r\n    }\r\n  }, [me]);\r\n\r\n  const mainContents = (\r\n    <>\r\n      { me && <PostForm />}\r\n      {mainPosts.map((post) => (<PostCard key={post.id} post={post} />))}\r\n    </>\r\n  );\r\n\r\n  // 왜 props로 줬냐\r\n  return (\r\n    <>\r\n      { isDesktop && (\r\n      <DesktopLayout Side={<SideBar />}>\r\n        {mainContents}\r\n      </DesktopLayout>\r\n      )}\r\n      { isTablet && (\r\n      <TabletLayout SideMenu={<SideMenu />} Side={<SideBar />}>\r\n        {mainContents}\r\n      </TabletLayout>\r\n      )}\r\n      { isMobile && (\r\n      <MobileLayout Header={<Title />} Menu={<Menu />}>\r\n        {mainContents}\r\n      </MobileLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n\r\n  context.store.dispatch(END); // REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}