{"ast":null,"code":"//import produce from '../util/produce';\nimport produce from \"immer\";\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const SIGN_UP_DONE = 'SIGN_UP_DONE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = null;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.me = action.data;\n      draft.loadMyInfoError = null;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = action.error;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data\n      });\n      draft.followDone = true;\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data);\n      draft.unfollowDone = true;\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = action.data;\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpError = null;\n      draft.signUpDone = false;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case SIGN_UP_DONE:\n      draft.signUpDone = false;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case REMOVE_POST_OF_ME:\n      //filter()메서드는 주어진 함수의 테스트를 통과하는 모든 요소를 모아 새로운 배열로 반환한다.\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data.postId);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_DONE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","reducer","state","action","draft","type","data","error","Followings","push","id","filter","v","Posts","unshift","postId"],"mappings":"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","sourcesContent":["//import produce from '../util/produce';\r\nimport produce from \"immer\";\r\n\r\nexport const initialState = {\r\n    loadMyInfoLoading: false, // 유저 정보 가져오기 시도중\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\nexport const SIGN_UP_DONE = 'SIGN_UP_DONE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch(action.type){\r\n    case LOAD_MY_INFO_REQUEST:\r\n        draft.loadMyInfoLoading = true;\r\n        draft.loadMyInfoDone = false;\r\n        draft.loadMyInfoError = null;\r\n    case LOAD_MY_INFO_SUCCESS:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = true;\r\n        draft.me=action.data\r\n        draft.loadMyInfoError = null;\r\n    case LOAD_MY_INFO_FAILURE:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = false;\r\n        draft.loadMyInfoError = action.error;\r\n    case FOLLOW_REQUEST:\r\n        draft.followLoading = true;\r\n        draft.followError = null;\r\n        draft.followDone = false;\r\n        break;\r\n    case FOLLOW_SUCCESS:\r\n        draft.followLoading = false;\r\n        draft.me.Followings.push({ id : action.data });\r\n        draft.followDone = true;\r\n        break;\r\n    case FOLLOW_FAILURE:\r\n        draft.followLoading = false;\r\n        draft.followError=action.error;\r\n        break;\r\n    case UNFOLLOW_REQUEST:\r\n        draft.unfollowLoading = true;\r\n        draft.unfollowError = null;\r\n        draft.unfollowDone = false;\r\n        break;\r\n    case UNFOLLOW_SUCCESS:\r\n        draft.unfollowLoading = false;\r\n        draft.me.Followings = draft.me.Followings.filter((v)=> v.id !== action.data );\r\n        draft.unfollowDone = true;\r\n        break;\r\n    case UNFOLLOW_FAILURE:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n    case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n    case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = action.data;\r\n        draft.logInDone = true;\r\n        break;\r\n    case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n    case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutError = null;\r\n        draft.logOutDone = false;    \r\n        break;\r\n    case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;    \r\n        break;\r\n    case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error; \r\n        break;\r\n    case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpError = null;\r\n        draft.signUpDone = false;\r\n        break;\r\n    case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n    case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n    case SIGN_UP_DONE:\r\n        draft.signUpDone = false;\r\n        break;\r\n    case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameError = null;\r\n        draft.changeNicknameDone = false;\r\n        break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n    case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({id: action.data});\r\n        break;\r\n    case REMOVE_POST_OF_ME:\r\n        //filter()메서드는 주어진 함수의 테스트를 통과하는 모든 요소를 모아 새로운 배열로 반환한다.\r\n        draft.me.Posts = draft.me.Posts.filter((v)=> v.id !== action.data.postId);\r\n        break;\r\n    default:\r\n        break;\r\n    }\r\n});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}