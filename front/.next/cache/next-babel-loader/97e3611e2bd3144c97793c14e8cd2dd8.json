{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Post = function Post() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost,\n      loadPostError = _useSelector.loadPostError;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!singlePost) {\n      print('done');\n      alert(loadPostError);\n      return router.push('/');\n    }\n  }, [singlePost]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: 'https://nodebird.com/post/${id}'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Post, \"Et/fiyPwkT33ZvEI9PdsMhqpxso=\", false, function () {\n  return [useSelector, useRouter];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/post/[id].js"],"names":["useSelector","useRouter","Head","AppLayout","PostCard","useEffect","Post","state","post","singlePost","loadPostError","router","print","alert","push","User","nickname","content","Images","src"],"mappings":";;;;AAEA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,qBACuBN,WAAW,CAAC,UAACO,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CADlC;AAAA,MACPC,UADO,gBACPA,UADO;AAAA,MACKC,aADL,gBACKA,aADL;;AAEf,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AAEAI,EAAAA,SAAS,CAAC,YAAI;AACV,QAAI,CAACI,UAAL,EAAgB;AACZG,MAAAA,KAAK,CAAC,MAAD,CAAL;AACAC,MAAAA,KAAK,CAACH,aAAD,CAAL;AACA,aAAOC,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAP;AACH;AACJ,GANQ,EAMN,CAACL,UAAD,CANM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,mBACKA,UAAU,CAACM,IAAX,CAAgBC,QADrB;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEP,UAAU,CAACQ;AAA7C;AAAA;AAAA;AAAA;AAAA,eALJ,eAMI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,YAAKR,UAAU,CAACM,IAAX,CAAgBC,QAArB;AAAjC;AAAA;AAAA;AAAA;AAAA,eANJ,eAOI;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEP,UAAU,CAACQ;AAApD;AAAA;AAAA;AAAA;AAAA,eAPJ,eAQI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAER,UAAU,CAACS,MAAX,CAAkB,CAAlB,IAAsBT,UAAU,CAACS,MAAX,CAAkB,CAAlB,EAAqBC,GAA3C,GAAiD;AAApF;AAAA;AAAA;AAAA;AAAA,eARJ,eASI;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAYG,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA,aAZH;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CA5BD;;GAAMH,I;UACoCN,W,EACvBC,S;;;KAFbK,I;;AAgDN,eAAeA,IAAf","sourcesContent":["import axios from 'axios';\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouter} from \"next/router\";\r\nimport Head from 'next/head';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { END } from 'redux-saga';\r\nimport { useEffect } from 'react';\r\n\r\nconst Post = () => {\r\n    const { singlePost, loadPostError } = useSelector((state)=>state.post);\r\n    const router = useRouter();\r\n\r\n    useEffect(()=>{\r\n        if (!singlePost){\r\n            print('done');\r\n            alert(loadPostError);\r\n            return router.push('/');\r\n        }\r\n    }, [singlePost]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {singlePost.User.nickname}\r\n                    님의 글\r\n                </title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" content={singlePost.Images[0]? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={'https://nodebird.com/post/${id}'} />\r\n            </Head>\r\n           <PostCard post={singlePost} /> \r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}