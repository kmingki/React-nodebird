{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\profile.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport { useRouter } from 'next/router';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport useSWR from 'swr';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nconst Profile = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [followersLimit, setfollowersLimit] = useState(3);\n  const [followingsLimit, setfollowingsLimit] = useState(3); //data와 error가 둘다 없으면 로딩중\n\n  const {\n    data: followersData,\n    error: followersError\n  } = useSWR(`http://localhost:3065/user/loadFollowers?limit=${followersLimit}`, fetcher);\n  const {\n    data: followingsData,\n    error: followingsError\n  } = useSWR(`http://localhost:3065/user/loadFollowers?limit=${followingsLimit}`, fetcher);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      alert('로그인 해주세요');\n      return router.push('/');\n    }\n  }, [me === null || me === void 0 ? void 0 : me.id]);\n  const loadMoreFollowings = useCallback(() => {\n    setfollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = useCallback(() => {\n    setfollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return '내 정보 로딩중 ...';\n  }\n\n  if (followersError || followingsError) {\n    console.error(followersError || followingsError);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD314\\uB85C\\uC789/\\uD314\\uB85C\\uC6CC \\uB85C\\uB529 \\uC911 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: followingsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: followersData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/profile.js"],"names":["React","useCallback","useEffect","Head","AppLayout","useRouter","NicknameEditForm","FollowList","useSWR","useSelector","useDispatch","LOAD_MY_INFO_REQUEST","wrapper","axios","END","fetcher","url","get","withCredentials","then","result","data","Profile","router","dispatch","me","state","user","followersLimit","setfollowersLimit","useState","followingsLimit","setfollowingsLimit","followersData","error","followersError","followingsData","followingsError","id","alert","push","loadMoreFollowings","prev","loadMoreFollowers","console","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { useRouter } from 'next/router';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport useSWR from 'swr';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nconst fetcher = (url) => axios.get(url, { withCredentials: true}).then((result)=>result.data);\r\n\r\nconst Profile = () => {\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state)=>state.user);\r\n    const [ followersLimit, setfollowersLimit ] = useState(3);\r\n    const [ followingsLimit, setfollowingsLimit ] = useState(3);\r\n    //data와 error가 둘다 없으면 로딩중\r\n\r\n    const { data: followersData , error: followersError } = useSWR(`http://localhost:3065/user/loadFollowers?limit=${followersLimit}`, fetcher);\r\n    const { data: followingsData , error: followingsError } = useSWR(`http://localhost:3065/user/loadFollowers?limit=${followingsLimit}`, fetcher);\r\n    \r\n    useEffect(()=>{\r\n        if (!(me && me.id)) {\r\n            alert('로그인 해주세요');\r\n            return router.push('/');\r\n        }\r\n    }, [me?.id]);\r\n\r\n    const loadMoreFollowings = useCallback(()=>{\r\n        setfollowingsLimit((prev)=>prev+3);\r\n    }, []);\r\n\r\n    const loadMoreFollowers = useCallback(()=>{\r\n        setfollowersLimit((prev)=>prev+3);\r\n    }, []);\r\n\r\n    if (!me) {\r\n        return '내 정보 로딩중 ...';\r\n    }\r\n    \r\n    if (followersError || followingsError) {\r\n        console.error(followersError || followingsError);\r\n        return <div>팔로잉/팔로워 로딩 중 에러가 발생합니다.</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>내 프로필 | NodeBird</title>   \r\n            </Head>\r\n        <AppLayout>\r\n            <NicknameEditForm />\r\n            <FollowList header=\"팔로잉 목록\" data={followingsData} />\r\n            <FollowList header=\"팔로워 목록\" data={followersData} />\r\n        </AppLayout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}