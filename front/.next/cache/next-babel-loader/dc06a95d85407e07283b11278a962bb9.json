{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport AppLayout from '../components/appLayout';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, SIGN_UP_DONE, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\nconst contentStyle = {\n  border: \"1px solid #E0E0E0\",\n  height: \"450px\",\n  width: \"500px\",\n  margin: \"auto\",\n  marginTop: \"100px\",\n  background: \"white\"\n};\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user); //useEffect\n  //리액트컴포넌트가 렌더링 될때마다 특정 작업을 실행할 수 있도록 하는 Hook\n\n  useEffect(() => {\n    if (me !== null && me !== void 0 && me.id) {\n      alert('이미 로그인 하셨습니다.');\n      router.push('/');\n    }\n  }, [me === null || me === void 0 ? void 0 : me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      router.push('/');\n    }\n  }), [signUpDone];\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false); //passwordError가 원래는 false였음\n\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password); //다르면 password를 true로 set한다\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: contentStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"50px 0\",\n        fontFamily: \"Righteous, cursive\",\n        fontSize: \"50px\"\n      },\n      children: \"Chatter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      style: {\n        width: \"300px\",\n        margin: \"10px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            name: \"user-email\",\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            size: \"large\",\n            style: {\n              width: \"300px\",\n              margin: \"10px auto\"\n            },\n            value: email,\n            onChange: onChangeEmail,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            name: \"user-password\",\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            size: \"large\",\n            style: {\n              width: \"300px\",\n              margin: \"10px auto\"\n            },\n            value: password,\n            onChange: onChangePassword,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            width: \"300px\",\n            margin: \"10px auto\"\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/findPassWord\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), \"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Head","Form","Input","Checkbox","Button","styled","useDispatch","useSelector","useRouter","AppLayout","useInput","SIGN_UP_REQUEST","SIGN_UP_DONE","LOAD_MY_INFO_REQUEST","wrapper","axios","END","ErrorMessage","div","contentStyle","border","height","width","margin","marginTop","background","Signup","router","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","alert","push","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","type","data","textAlign","fontFamily","fontSize","onSubmitForm","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport AppLayout from '../components/appLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { SIGN_UP_REQUEST, SIGN_UP_DONE, LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nconst ErrorMessage = styled.div`\r\ncolor: red;\r\n`;\r\n\r\nconst contentStyle = { \r\n    border: \"1px solid #E0E0E0\", \r\n    height: \"450px\", \r\n    width: \"500px\", \r\n    margin: \"auto\", \r\n    marginTop: \"100px\", \r\n    background:\"white\"\r\n};\r\n\r\nconst Signup = () => {\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const {  signUpLoading, signUpDone, signUpError, me } = useSelector((state)=>state.user);\r\n\r\n    //useEffect\r\n    //리액트컴포넌트가 렌더링 될때마다 특정 작업을 실행할 수 있도록 하는 Hook\r\n    useEffect(()=>{\r\n        if (me?.id) { \r\n            alert('이미 로그인 하셨습니다.');\r\n            router.push('/');\r\n        }\r\n    }, [me?.id]);\r\n\r\n    useEffect(()=>{\r\n        if (signUpDone) {\r\n            router.push('/');\r\n        }\r\n    }), [signUpDone];\r\n\r\n    useEffect(()=>{\r\n        if (signUpError) {\r\n            alert(signUpError);\r\n        }\r\n    },[signUpError])\r\n\r\n\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);//passwordError가 원래는 false였음\r\n    const onChangePasswordCheck = useCallback((e)=>{\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);//다르면 password를 true로 set한다\r\n    }, [password]);\r\n\r\n    const [term, setTerm] = useState('');\r\n    const [termError, setTermError] = useState(false);\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n        setTermError(false);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term) {\r\n            return setTermError(true);\r\n        }\r\n        \r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: { email, password, nickname },\r\n        });\r\n        \r\n    },[password,passwordCheck,term]);\r\n\r\n    return (\r\n        <div style={contentStyle}>\r\n            <h1 style={{textAlign: \"center\", margin: \"50px 0\",fontFamily: \"Righteous, cursive\", fontSize: \"50px\"}}>Chatter</h1>\r\n            \r\n            <div className=\"loginForm\" style={{width:\"300px\", margin:\"10px auto\"}}>\r\n                <Form onFinish={onSubmitForm}>\r\n                    <div>\r\n                        <Input \r\n                        name=\"user-email\" \r\n                        type=\"email\"\r\n                        placeholder=\"이메일\"\r\n                        size=\"large\"\r\n                        style={{width:\"300px\", margin:\"10px auto\"}} \r\n                        value={email} \r\n                        onChange={onChangeEmail} \r\n                        required />\r\n                    </div>\r\n                    <div>\r\n                        <Input.Password\r\n                            name=\"user-password\" \r\n                            type=\"password\"\r\n                            placeholder=\"비밀번호\"\r\n                            size=\"large\"\r\n                            style={{width : \"300px\", margin: \"10px auto\"}} \r\n                            value={password} \r\n                            onChange={onChangePassword} \r\n                            required />\r\n                    </div>\r\n                    \r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width : \"300px\", margin: \"10px auto\"}}>로그인</Button>\r\n                    <Link href=\"/findPassWord\"><a><p style={{textAlign: \"center\"}}>비밀번호를 잊으셨나요?</p></a></Link>\r\n                    \r\n                    \r\n                    계정이 없으신가요?&nbsp;&nbsp;  \r\n                    <Link href=\"/signup\"><a>회원가입</a></Link>\r\n                \r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}