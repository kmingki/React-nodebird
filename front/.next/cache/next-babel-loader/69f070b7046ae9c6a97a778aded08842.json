{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\message\\\\[roomId].js\";\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Room from './../../components/Room';\nimport Chat from './../../components/Chat';\nimport DesktopLayout from './../../components/layout/DesktopLayout';\nimport { LOAD_ROOM_LIST } from '../../reducers/chat';\nimport { useJoinRoom } from '../../hooks/chatHooks';\nimport { socket } from './../../utils/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    roomId\n  } = router.query;\n  const {\n    me\n  } = useSelector(state => state.user);\n  useJoinRoom(socket, me.id);\n  useEffect(() => {\n    socket.emit('roomListDataRequest', me.id, res => {\n      dispatch({\n        type: LOAD_ROOM_LIST,\n        data: res.rooms\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('updateRoomList', room => {\n      room.participants.forEach(u => {\n        if (u.id === me.id) {\n          console.log('update room list'); //draft.me.Followings.push({ id : action.data.UserId});\n          //console.log([...rooms, room]);\n\n          dispatch({\n            type: UPDATE_ROOM_LIST,\n            data: room\n          });\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DesktopLayout, {\n    Side: /*#__PURE__*/_jsxDEV(Room, {\n      height: document.documentElement.clientHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 30\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Message;","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/message/[roomId].js"],"names":["React","useEffect","useRouter","useSelector","useDispatch","Room","Chat","DesktopLayout","LOAD_ROOM_LIST","useJoinRoom","socket","Message","dispatch","router","roomId","query","me","state","user","id","emit","res","type","data","rooms","on","room","participants","forEach","u","console","log","UPDATE_ROOM_LIST","document","documentElement","clientHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAaD,MAAM,CAACE,KAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AAEAT,EAAAA,WAAW,CAACC,MAAD,EAASM,EAAE,CAACG,EAAZ,CAAX;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACU,IAAP,CAAY,qBAAZ,EAAmCJ,EAAE,CAACG,EAAtC,EAA2CE,GAAD,IAAS;AAC/CT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEd,cADD;AAELe,QAAAA,IAAI,EAAEF,GAAG,CAACG;AAFL,OAAD,CAAR;AAIH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASAvB,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,MAAM,CAACe,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAAU;AAElCA,MAAAA,IAAI,CAACC,YAAL,CAAkBC,OAAlB,CAA0BC,CAAC,IAAI;AAC3B,YAAIA,CAAC,CAACV,EAAF,KAASH,EAAE,CAACG,EAAhB,EAAoB;AAChBW,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADgB,CAEhB;AACA;;AACAnB,UAAAA,QAAQ,CAAC;AACLU,YAAAA,IAAI,EAAEU,gBADD;AAELT,YAAAA,IAAI,EAAEG;AAFD,WAAD,CAAR;AAIH;AACJ,OAVD;AAWH,KAbD;AAcH,GAhBQ,EAgBP,EAhBO,CAAT;AAkBA,sBACI,QAAC,aAAD;AAAe,IAAA,IAAI,eAAE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEO,QAAQ,CAACC,eAAT,CAAyBC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAArB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAErB;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;;AAyCA,eAAeH,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Room from './../../components/Room';\r\nimport Chat from './../../components/Chat';\r\nimport DesktopLayout from './../../components/layout/DesktopLayout';\r\n\r\nimport { LOAD_ROOM_LIST } from '../../reducers/chat';\r\nimport { useJoinRoom } from '../../hooks/chatHooks';\r\nimport { socket } from './../../utils/io';\r\n\r\nconst Message = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { roomId } = router.query;\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    useJoinRoom(socket, me.id);\r\n    useEffect(() => {\r\n        socket.emit('roomListDataRequest', me.id, (res) => {\r\n            dispatch({\r\n                type: LOAD_ROOM_LIST,\r\n                data: res.rooms\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('updateRoomList', (room) => {\r\n            \r\n            room.participants.forEach(u => {\r\n                if (u.id === me.id) {\r\n                    console.log('update room list');\r\n                    //draft.me.Followings.push({ id : action.data.UserId});\r\n                    //console.log([...rooms, room]);\r\n                    dispatch({\r\n                        type: UPDATE_ROOM_LIST,\r\n                        data: room\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n        <DesktopLayout Side={<Room height={document.documentElement.clientHeight}/>}>\r\n            <Chat roomId={roomId} />\r\n        </DesktopLayout>\r\n    );\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}