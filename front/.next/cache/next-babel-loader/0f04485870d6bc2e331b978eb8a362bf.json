{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\components\\\\Chat.js\";\n\n/* eslint-disable */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Input, Button } from 'antd';\nimport { ArrowUpOutlined, LoadingOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../utils/io';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWrapper = styled.div.withConfig({\n  displayName: \"Chat__ChatWrapper\",\n  componentId: \"sc-cmjb8i-0\"\n})([\"max-width:50%;border:solid 1px #4C4C51;border-radius:5%;align-self:\", \";padding:2%;margin:1% 0;word-wrap:break-word;\"], ({\n  sender\n}) => sender === 'me' ? 'flex-end' : 'flex-start');\n\nconst Chat = ({\n  roomId\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: room,\n    1: setRoom\n  } = useState({});\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(''); //Input 입력 메세지\n\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]); //채팅방 메세지 기록\n\n  const chattingContent = useRef(null);\n  useEffect(() => {\n    if (roomId !== \"main\" && isLoading) {\n      socket.emit('loadRoom', {\n        roomId: parseInt(roomId, 10),\n        socketId: socket.id\n      });\n    }\n  }, [roomId]);\n  useEffect(() => {\n    socket.on('roomData', roomData => {\n      /*\r\n      setRoom(room => ({...room,\r\n      Chats: _.cloneDeep(roomData.Chats),\r\n      User: _.cloneDeep(roomData.User),\r\n      UserId: roomData.UserId,\r\n      createdAt: roomData.createdAt,\r\n      id : roomData.id,\r\n      max: roomData.max,\r\n      participants: _.cloneDeep(roomData.participants),\r\n      title: roomData.title,\r\n      updatedAt: roomData.updatedAt\r\n      }));\r\n      */\n      setRoom(roomData);\n      setMessages(roomData.Chats);\n      setIsLoading(false);\n    });\n    return () => {\n      socket.off('roomData');\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('newMessage', newChat => {\n      console.log('new Message event on');\n      console.log(newChat);\n      setMessages(prev => {\n        return [...prev, newChat];\n      });\n    });\n    return () => {\n      socket.off('newMessage');\n    };\n  }, []);\n  useEffect(() => {\n    chattingContent.current && updateScroll();\n  });\n\n  const onChangeMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const onClickSubmit = () => {\n    if (message.length > 0) {\n      console.log(`send ${message} to server`);\n      socket.emit('sendMessage', {\n        roomId: parseInt(roomId, 10),\n        message,\n        userId: me.id\n      });\n      setMessage('');\n    }\n  };\n\n  const updateScroll = () => {\n    chattingContent.current.scrollTop = chattingContent.current.scrollHeight;\n  }; ///처음 채팅방을 눌렀을때, 챗이 왔을때 ? 고민좀\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomId !== \"main\" ? isLoading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n      spin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"50px\",\n          borderBottom: \"solid thin #EFEEF5\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: room.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"grey\"\n          },\n          children: room.participants.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        ref: chattingContent,\n        style: {\n          height: \"calc(100% - 110px)\",\n          width: \"100%\",\n          overflow: 'auto',\n          display: 'flex',\n          flexDirection: 'column',\n          paddingRight: '5%',\n          paddingLeft: '5%'\n        },\n        children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(ChatWrapper, {\n          sender: m.User.id === me.id ? \"me\" : \"other\",\n          children: m.chat\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        style: {\n          position: \"absolute\",\n          height: \"60px\",\n          width: \"100%\",\n          left: '0',\n          right: '0',\n          bottom: \"0\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderTop: \"solid thin #EFEEF5\",\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          bordered: false,\n          style: {\n            width: \"90%\"\n          },\n          onChange: onChangeMessage,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 61\n          }, this),\n          size: \"large\",\n          style: {\n            marginRight: \"5%\"\n          },\n          onClick: onClickSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"You don\\u2019t have a message selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Choose one from your existing messages, or start a new one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Chat;\n/*\r\n<div>\r\n        <h1>You don’t have a message selected</h1>\r\n        <br />\r\n        <p>Choose one from your existing messages, or start a new one.</p>\r\n        </div>\r\n */","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/components/Chat.js"],"names":["React","useEffect","useState","useRef","Input","Button","ArrowUpOutlined","LoadingOutlined","UserAddOutlined","useSelector","socket","_","styled","ChatWrapper","div","sender","Chat","roomId","me","state","user","room","setRoom","isLoading","setIsLoading","message","setMessage","messages","setMessages","chattingContent","emit","parseInt","socketId","id","on","roomData","Chats","off","newChat","console","log","prev","current","updateScroll","onChangeMessage","e","target","value","onClickSubmit","length","userId","scrollTop","scrollHeight","width","height","borderBottom","display","alignItems","justifyContent","title","color","participants","overflow","flexDirection","paddingRight","paddingLeft","map","m","i","User","chat","position","left","right","bottom","borderTop","backgroundColor","marginRight"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport { ArrowUpOutlined, LoadingOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { socket } from '../utils/io';\r\nimport _ from 'lodash';\r\nimport styled from 'styled-components';\r\n\r\nconst ChatWrapper = styled.div`\r\nmax-width: 50%;\r\nborder: solid 1px #4C4C51;\r\nborder-radius: 5%;\r\nalign-self: ${({sender}) => sender==='me'?'flex-end':'flex-start'};\r\npadding: 2%;\r\nmargin: 1% 0;\r\nword-wrap: break-word;\r\n`;\r\n\r\nconst Chat = ({ roomId }) => {\r\n    const { me } = useSelector((state)=>state.user);\r\n    const [room, setRoom] = useState({})\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [message, setMessage] = useState(''); //Input 입력 메세지\r\n    const [messages, setMessages] = useState([]); //채팅방 메세지 기록\r\n    const chattingContent = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if (roomId !== \"main\" && isLoading) {\r\n            socket.emit('loadRoom', {\r\n                roomId : parseInt(roomId, 10),\r\n                socketId : socket.id,\r\n            });\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(()=>{\r\n        \r\n        socket.on('roomData', (roomData)=>{\r\n            \r\n            /*\r\n            setRoom(room => ({...room,\r\n            Chats: _.cloneDeep(roomData.Chats),\r\n            User: _.cloneDeep(roomData.User),\r\n            UserId: roomData.UserId,\r\n            createdAt: roomData.createdAt,\r\n            id : roomData.id,\r\n            max: roomData.max,\r\n            participants: _.cloneDeep(roomData.participants),\r\n            title: roomData.title,\r\n            updatedAt: roomData.updatedAt\r\n            }));\r\n            */\r\n           \r\n            setRoom(roomData);\r\n            setMessages(roomData.Chats);\r\n\r\n            setIsLoading(false);\r\n        \r\n        });\r\n\r\n        return () => {\r\n            socket.off('roomData');\r\n        };\r\n        \r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        \r\n        socket.on('newMessage', (newChat) => {\r\n           console.log('new Message event on');\r\n           console.log(newChat);\r\n           setMessages((prev)=> { return [...prev, newChat]});\r\n        });\r\n\r\n        return () => {\r\n            socket.off('newMessage');\r\n        };\r\n\r\n    }, []);\r\n\r\n    \r\n    useEffect(()=> {\r\n\r\n        chattingContent.current && updateScroll();\r\n        \r\n    });\r\n\r\n    const onChangeMessage = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        if (message.length > 0) {\r\n            console.log(`send ${message} to server`);\r\n            \r\n            socket.emit('sendMessage', {\r\n                roomId : parseInt(roomId, 10),\r\n                message,\r\n                userId: me.id\r\n            });\r\n            \r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const updateScroll = () => {\r\n        chattingContent.current.scrollTop = chattingContent.current.scrollHeight;\r\n    } ///처음 채팅방을 눌렀을때, 챗이 왔을때 ? 고민좀\r\n    return (\r\n        <>\r\n        { roomId !== \"main\" ? \r\n        isLoading ?  <LoadingOutlined spin /> : \r\n        <div style={{width:\"100%\", height:\"100%\"}}>\r\n            <div style={{height: \"50px\", borderBottom: \"solid thin #EFEEF5\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n            <h2>{room.title}</h2>&nbsp;&nbsp;<h2 style={{color: \"grey\"}}>{room.participants.length}</h2>\r\n            </div>\r\n\r\n            <div className=\"chatContainer\" ref={chattingContent} style={{ height:\"calc(100% - 110px)\", width:\"100%\", overflow:'auto', display:'flex', flexDirection: 'column', paddingRight: '5%', paddingLeft:'5%'}}>\r\n            { messages && messages.map((m, i)=><ChatWrapper key={i} sender={m.User.id === me.id? \"me\" : \"other\"}>{m.chat}</ChatWrapper>)}\r\n            </div>\r\n\r\n            <div className=\"input\" style={{position:\"absolute\", height:\"60px\", width:\"100%\",left:'0', right:'0', bottom:\"0\", display:\"flex\", alignItems: \"center\",\r\n            justifyContent:\"space-between\", borderTop: \"solid thin #EFEEF5\", backgroundColor:'white'}}>\r\n                <Input bordered={false} style={{width:\"90%\"}} onChange={onChangeMessage} value={message}/>\r\n                <Button type=\"primary\" shape=\"circle\" icon={<ArrowUpOutlined />} size=\"large\" style={{marginRight: \"5%\"}} onClick={onClickSubmit}/>\r\n            </div>\r\n        </div>\r\n         :  \r\n        <div style={{display:\"flex\", flexDirection: \"column\", justifyContent:\"center\", alignItems:\"center\", width:\"100%\", height:\"100%\", }}>\r\n        <div>You don’t have a message selected</div>\r\n        <div>Choose one from your existing messages, or start a new one.</div>\r\n        </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n\r\n/*\r\n<div>\r\n        <h1>You don’t have a message selected</h1>\r\n        <br />\r\n        <p>Choose one from your existing messages, or start a new one.</p>\r\n        </div>\r\n */"]},"metadata":{},"sourceType":"module"}