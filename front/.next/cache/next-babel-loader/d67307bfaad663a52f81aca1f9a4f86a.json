{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\messages.js\";\nimport React from 'react';\nimport Room from '../components/Room';\nimport Chat from '../components/Chat';\nimport DesktopLayout from '../components/layout/DesktopLayout';\nimport wrapper from '../store/configureStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  return /*#__PURE__*/_jsxDEV(DesktopLayout, {\n    Side: /*#__PURE__*/_jsxDEV(Room, {\n      height: document.documentElement.clientHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 30\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\n\n  await context.store.sagaTask.toPromise();\n});\nexport default Messages;","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/messages.js"],"names":["React","Room","Chat","DesktopLayout","wrapper","Messages","document","documentElement","clientHeight","getServerSideProps","context","cookie","req","headers","axios","defaults","Cookie","store","dispatch","type","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","END","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,sBACI,QAAC,aAAD;AAAe,IAAA,IAAI,eAAE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEC,QAAQ,CAACC,eAAT,CAAyBC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAArB;AAAA,2BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;AASA,OAAO,MAAMC,kBAAkB,GAAGL,OAAO,CAACK,kBAAR,CAA2B,MAAOC,OAAP,IAAiB;AAC1E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAaF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAjC,GAA0C,EAAzD;AACAG,EAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;;AAEA,MAAIN,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBG,IAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgCL,MAAhC;AACH;;AAEDD,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEC;AADa,GAAvB;AAGAV,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEE;AADa,GAAvB;AAIAX,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuBI,GAAvB,EAf0E,CAe7C;;AAC7B,QAAMZ,OAAO,CAACO,KAAR,CAAcM,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAjBiC,CAA3B;AAmBP,eAAenB,QAAf","sourcesContent":["import React from 'react';\r\nimport Room from '../components/Room';\r\nimport Chat from '../components/Chat';\r\nimport DesktopLayout from '../components/layout/DesktopLayout';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Messages = () => {\r\n\r\n    return(\r\n        <DesktopLayout Side={<Room height={document.documentElement.clientHeight}/>}>\r\n            <Chat />\r\n        </DesktopLayout>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\r\n    const cookie = context.req? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    \r\n    context.store.dispatch(END); //REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}