{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { LOAD_ROOM_REQUEST, LOAD_ROOM_SUCCESS, LOAD_ROOM_FAILURE } from '../reducers/chat';\n\nfunction loadRoomAPI(data) {\n  return axios.get(`/room/${data}`);\n}\n\nfunction* loadRoom(action) {\n  try {\n    const result = yield call(loadRoomAPI, action.data);\n    yield put({\n      type: LOAD_ROOM_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_ROOM_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadRoom() {\n  yield takeLatest(LOAD_ROOM_REQUEST, loadRoom);\n}\n\nexport default function* chatSaga() {\n  yield all([fork(watchLoadRoom)]);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/sagas/chat.js"],"names":["axios","all","delay","fork","put","takeLatest","throttle","call","LOAD_ROOM_REQUEST","LOAD_ROOM_SUCCESS","LOAD_ROOM_FAILURE","loadRoomAPI","data","get","loadRoom","action","result","type","err","console","error","response","watchLoadRoom","chatSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,QAA5C,EAAsDC,IAAtD,QAAkE,oBAAlE;AAEA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,QAIO,kBAJP;;AAMA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAOZ,KAAK,CAACa,GAAN,CAAW,SAAQD,IAAK,EAAxB,CAAP;AACH;;AAED,UAAWE,QAAX,CAAoBC,MAApB,EAA4B;AACxB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,WAAD,EAAcI,MAAM,CAACH,IAArB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAER,iBADA;AAENG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEP,iBADA;AAENU,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAWU,aAAX,GAA2B;AACvB,QAAMjB,UAAU,CAACG,iBAAD,EAAoBM,QAApB,CAAhB;AACH;;AAED,eAAe,UAAWS,QAAX,GAAsB;AACjC,QAAMtB,GAAG,CAAC,CACNE,IAAI,CAACmB,aAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n    LOAD_ROOM_REQUEST,\r\n    LOAD_ROOM_SUCCESS,\r\n    LOAD_ROOM_FAILURE,\r\n} from '../reducers/chat';\r\n\r\nfunction loadRoomAPI(data) {\r\n    return axios.get(`/room/${data}`);\r\n}\r\n\r\nfunction * loadRoom(action) {\r\n    try{\r\n        const result = yield call(loadRoomAPI, action.data);\r\n        yield put({\r\n            type: LOAD_ROOM_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_ROOM_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction * watchLoadRoom() {\r\n    yield takeLatest(LOAD_ROOM_REQUEST, loadRoom);\r\n}\r\n\r\nexport default function * chatSaga() {\r\n    yield all([\r\n        fork(watchLoadRoom)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}