{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\node-bird\\\\react-nodebird\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport axios from 'axios';\nimport wrapper from \"../../store/configureStore\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { END } from 'redux-saga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: 'https://nodebird.com/post/${id}'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/pages/post/[id].js"],"names":["axios","wrapper","useSelector","useRouter","Head","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","AppLayout","PostCard","END","Post","singlePost","state","post","router","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","id","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,GAAT,QAAoB,YAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAlC;AACA,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,mBACKQ,UAAU,CAACI,IAAX,CAAgBC,QADrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEL,UAAU,CAACM;AAA7C;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,GAAEN,UAAU,CAACI,IAAX,CAAgBC,QAAS;AAA/D;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEL,UAAU,CAACM;AAApD;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAEN,UAAU,CAACO,MAAX,CAAkB,CAAlB,IAAsBP,UAAU,CAACO,MAAX,CAAkB,CAAlB,EAAqBC,GAA3C,GAAiD;AAApF;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYG,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;AAsBA,OAAO,MAAMS,kBAAkB,GAAGnB,OAAO,CAACmB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAtB,EAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBtB,IAAAA,KAAK,CAACyB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAExB;AADa,GAAvB;AAGAgB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEvB,iBADa;AAEnBwB,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAeC;AAFF,GAAvB;AAIAX,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBnB,GAAvB;AACA,QAAMY,OAAO,CAACM,KAAR,CAAcM,QAAd,CAAuBC,SAAvB,EAAN;AAEH,CAhBiC,CAA3B;AAkBP,eAAexB,IAAf","sourcesContent":["import axios from 'axios';\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouter} from \"next/router\";\r\nimport Head from 'next/head';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { END } from 'redux-saga';\r\n\r\nconst Post = () => {\r\n    const { singlePost } = useSelector((state)=>state.post);\r\n    const router = useRouter();\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {singlePost.User.nickname}\r\n                    님의 글\r\n                </title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" content={singlePost.Images[0]? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={'https://nodebird.com/post/${id}'} />\r\n            </Head>\r\n           <PostCard post={singlePost} /> \r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}