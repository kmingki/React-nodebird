{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatter\\\\chatter\\\\front\\\\pages\\\\main.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { useMediaQuery } from 'react-responsive';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport MobileLayout from '../components/layout/MobileLayout.js';\nimport DesktopLayout from '../components/layout/DesktopLayout.js';\nimport TabletLayout from '../components/layout/tabletLayout';\nimport SideBar from '../components/SideBar';\nimport Title from '../components/layout/Title';\nimport Menu from '../components/layout/Menu';\nimport SideMenu from '../components/layout/SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Main = function Main() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  var isMobile = useMediaQuery({\n    maxWidth: 500\n  }); // ~500\n\n  var isTablet = useMediaQuery({\n    minWidth: 501,\n    maxWidth: 1023\n  }); // 501~1023\n\n  var isDesktop = useMediaQuery({\n    minWidth: 1024\n  });\n  useEffect(function () {\n    if (retweetError) {\n      return alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      // scrollY:스크롤을 얼마나 내렸는지 clientHeight: 화면길이\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id // 마지막 post의 id\n\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  /*\r\n  useEffect(() => {\r\n    if (!me) {\r\n      return Router.push('/');\r\n    }\r\n  }, [me]);\r\n  */\n\n  var mainContents = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, _this);\n    })]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isDesktop && /*#__PURE__*/_jsxDEV(DesktopLayout, {\n      Side: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, _this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), isTablet && /*#__PURE__*/_jsxDEV(TabletLayout, {\n      SideMenu: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }, _this),\n      Side: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 51\n      }, _this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), isMobile && /*#__PURE__*/_jsxDEV(MobileLayout, {\n      Header: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, _this),\n      Menu: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, _this),\n      children: mainContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Main, \"1w0mFLI7ExLMpPriz1aL92MXUmQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Main;\nexport var __N_SSP = true;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/User/Desktop/chatter/chatter/front/pages/main.js"],"names":["React","useEffect","useDispatch","useSelector","Router","useMediaQuery","PostForm","PostCard","LOAD_POSTS_REQUEST","MobileLayout","DesktopLayout","TabletLayout","SideBar","Title","Menu","SideMenu","Main","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","isMobile","maxWidth","isTablet","minWidth","isDesktop","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","data","length","id","addEventListener","removeEventListener","mainContents","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport Router from 'next/router';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport MobileLayout from '../components/layout/MobileLayout.js';\r\nimport DesktopLayout from '../components/layout/DesktopLayout.js';\r\nimport TabletLayout from '../components/layout/tabletLayout';\r\nimport SideBar from '../components/SideBar';\r\nimport Title from '../components/layout/Title';\r\nimport Menu from '../components/layout/Menu';\r\nimport SideMenu from '../components/layout/SideMenu';\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector((state) => state.post);\r\n  const isMobile = useMediaQuery({ maxWidth: 500 }); // ~500\r\n  const isTablet = useMediaQuery({ minWidth: 501, maxWidth: 1023 }); // 501~1023\r\n  const isDesktop = useMediaQuery({ minWidth: 1024 });\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      return alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      // scrollY:스크롤을 얼마나 내렸는지 clientHeight: 화면길이\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            data: mainPosts[mainPosts.length - 1]?.id, // 마지막 post의 id\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if (!me) {\r\n      return Router.push('/');\r\n    }\r\n  }, [me]);\r\n*/\r\n  const mainContents = (\r\n    <>\r\n      { me && <PostForm />}\r\n      {mainPosts.map((post) => (<PostCard key={post.id} post={post} />))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      { isDesktop && (\r\n      <DesktopLayout Side={<SideBar />}>\r\n        {mainContents}\r\n      </DesktopLayout>\r\n      )}\r\n      { isTablet && (\r\n      <TabletLayout SideMenu={<SideMenu />} Side={<SideBar />}>\r\n        {mainContents}\r\n      </TabletLayout>\r\n      )}\r\n      { isMobile && (\r\n      <MobileLayout Header={<Title />} Menu={<Menu />}>\r\n        {mainContents}\r\n      </MobileLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n\r\n  context.store.dispatch(END); // REQUEST가 SUCCESS가 될때까지 기다려준다.\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}