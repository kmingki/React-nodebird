{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\FollowButton.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  var _me$Followings;\n\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : (_me$Followings = me.Followings) === null || _me$Followings === void 0 ? void 0 : _me$Followings.find(v => v.id === post.User.id); //id?? 내가 로그인하고 내 팔로잉에 있으\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (me === null) {\n    return null;\n  } else {\n    if (post.id === me.id) {\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this); //로그인 안한 상태에서 팔로우하면 로그인페이지로 가도록 하자\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    content: PropTypes.string,\n    User: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      nickname: PropTypes.string.isRequired\n    }).isRequired,\n    Images: PropTypes.array,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default FollowButton;\n/*\r\n@useCallback-[]내부 값이 바뀌면 함수를 재생성, \r\n@useEffect-[]내부에 넣은 값이 바뀌면 함수 재실행\r\n컴포넌트가 마운트 됐을 때 (처음 나타났을 때), 언마운트 됐을 때 (사라질 때), 그리고 업데이트 될 때 (특정 props가 바뀔 때)\r\ndeps에 특정 값을 넣게 된다면, 컴포넌트가 처음 마운트 될 때에도 호출이 되고, 지정한 값이 바뀔 때에도 호출이 됩니다.\r\n */","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/FollowButton.js"],"names":["React","useCallback","useEffect","Button","PropTypes","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data","propTypes","shape","number","isRequired","content","string","nickname","Images","array","Comments","arrayOf","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA1D;AACA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,yCAAGA,EAAE,CAAEM,UAAP,mDAAG,eAAgBC,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA/C,CAApB,CAH+B,CAGwC;;AAEvE,QAAME,aAAa,GAAGtB,WAAW,CAAC,MAAI;AAClC,QAAIgB,WAAJ,EAAgB;AACZN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AACHV,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAIL,EAAE,KAAK,IAAX,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEO;AACH,QAAIF,IAAI,CAACW,EAAL,KAAYT,EAAE,CAACS,EAAnB,EAAsB;AAClB,aAAO,IAAP;AACH;AACJ;;AAED,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES,aAA5D;AAAA,cACKN,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,UADJ,CA3B+B,CA+B7B;AACL,CAhCD;;AAkCAR,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,KAAV,CAAgB;AACpBN,IAAAA,EAAE,EAAEjB,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAEpBC,IAAAA,OAAO,EAAC1B,SAAS,CAAC2B,MAFE;AAGpBT,IAAAA,IAAI,EAAElB,SAAS,CAACuB,KAAV,CAAgB;AACpBN,MAAAA,EAAE,EAAEjB,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAEpBG,MAAAA,QAAQ,EAAE5B,SAAS,CAAC2B,MAAV,CAAiBF;AAFP,KAAhB,EAGHA,UANiB;AAOpBI,IAAAA,MAAM,EAAC7B,SAAS,CAAC8B,KAPG;AAQpBC,IAAAA,QAAQ,EAAC/B,SAAS,CAACgC,OAAV,CAAkBhC,SAAS,CAACiC,MAA5B;AARW,GAAhB,EASHR;AAVkB,CAAzB;AAaA,eAAepB,YAAf;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, followLoading, unfollowLoading } = useSelector((state)=>state.user);\r\n    const isFollowing = me?.Followings?.find((v) => v.id === post.User.id);//id?? 내가 로그인하고 내 팔로잉에 있으\r\n\r\n    const onClickButton = useCallback(()=>{\r\n        if (isFollowing){\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n\r\n    if (me === null){\r\n        return null;\r\n    } else {\r\n        if (post.id === me.id){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n            {isFollowing ? '언팔로우' : '팔로우'} \r\n        </Button>\r\n    );//로그인 안한 상태에서 팔로우하면 로그인페이지로 가도록 하자\r\n};\r\n\r\nFollowButton.propTypes = {\r\n    post: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      content:PropTypes.string,\r\n      User: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        nickname: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n      Images:PropTypes.array,\r\n      Comments:PropTypes.arrayOf(PropTypes.object)\r\n    }).isRequired,\r\n  };\r\n\r\nexport default FollowButton;\r\n\r\n\r\n/*\r\n@useCallback-[]내부 값이 바뀌면 함수를 재생성, \r\n@useEffect-[]내부에 넣은 값이 바뀌면 함수 재실행\r\n컴포넌트가 마운트 됐을 때 (처음 나타났을 때), 언마운트 됐을 때 (사라질 때), 그리고 업데이트 될 때 (특정 props가 바뀔 때)\r\ndeps에 특정 값을 넣게 된다면, 컴포넌트가 처음 마운트 될 때에도 호출이 되고, 지정한 값이 바뀔 때에도 호출이 됩니다.\r\n */"]},"metadata":{},"sourceType":"module"}