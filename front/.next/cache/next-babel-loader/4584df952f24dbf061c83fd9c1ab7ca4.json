{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport PostImages from './PostImages';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      likePostError = _useSelector.likePostError;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id; //있으면 id 없으면 undefined\n\n  var onUnlike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [post, id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, _this) //이미지가 반드시 한개 이상일때 실행된다.\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, _this)\n      }, \"elipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this)],\n      extra: /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 30\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: function renderItem(item) {\n          //item은 post.Comments\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname //item.User.nickname\n              ,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/user',\n                  query: {\n                    id: item.User.id\n                  }\n                },\n                as: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 28\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"k1mcd/IGdX39ElZloKFrB2Z0XKc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    //shape을 이용하면 더 정확하게 prop정의 할수있다.\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","PropTypes","useSelector","useDispatch","Card","Popover","Button","List","Comment","Avatar","HeartTwoTone","MessageOutlined","EllipsisOutlined","HeartOutlined","RetweetOutlined","styled","Link","PostImages","PostCardContent","CommentForm","FollowButton","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","CardWrapper","div","PostCard","post","dispatch","state","removePostLoading","likePostError","commentFormOpened","setCommentFormOpened","user","me","id","onUnlike","type","data","onLike","alert","onToggleComment","prev","onRemovePost","liked","Likers","find","v","Images","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect }from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\r\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nimport PostImages from './PostImages';\r\nimport PostCardContent from './PostCardContent';\r\nimport CommentForm from './CommentForm';\r\nimport FollowButton from './FollowButton';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst CardWrapper = styled.div`\r\n    margin-bottom: 20px;\r\n`;\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading, likePostError } = useSelector((state)=>state.post);\r\n    const [ commentFormOpened, setCommentFormOpened ] = useState(false);\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id; //있으면 id 없으면 undefined\r\n    \r\n    \r\n\r\n    const onUnlike = useCallback(()=>{\r\n\r\n        dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id\r\n        });\r\n    },[]);\r\n\r\n    const onLike = useCallback(() => {\r\n        \r\n        if (!id) {\r\n          return alert('로그인이 필요합니다.');\r\n        }\r\n\r\n        return dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: post.id,\r\n        });\r\n\r\n      }, [post, id]);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n\r\n    const onRemovePost = useCallback(()=>{\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n\r\n    const liked = post.Likers.find(v=> v.id === id);\r\n\r\n    return(\r\n        <CardWrapper key={post.id}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images}/>}//이미지가 반드시 한개 이상일때 실행된다.\r\n            actions={[\r\n                <RetweetOutlined key=\"retweet\" />,\r\n                liked \r\n                ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\r\n                : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                <MessageOutlined key=\"message\" onClick={onToggleComment}/>,\r\n                <Popover \r\n                key=\"elipsis\" \r\n                content={(\r\n                    <Button.Group>\r\n                        {id && post.User.id === id \r\n                        ? (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                        </>\r\n                        )\r\n                     : <Button>신고</Button>}\r\n                    </Button.Group>\r\n                )}\r\n                >\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            extra={<FollowButton post={post} />}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                <CommentForm post={post} />\r\n                <List\r\n                header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={post.Comments || []}\r\n                renderItem={(item) => { //item은 post.Comments\r\n                    return(\r\n                    <li>\r\n                        <Comment \r\n                        author={item.User.nickname}//item.User.nickname\r\n                        avatar={(\r\n                            <Link href={{ pathname: '/user', query: { id: item.User.id }}} as={`/user/${item.User.id}`}>                          \r\n                        <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                        </Link>\r\n                        )}\r\n                        content={item.content}\r\n                        />\r\n                    </li>\r\n                    );\r\n                }\r\n            }\r\n                />                 \r\n                </>\r\n            )}\r\n        </CardWrapper>          \r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({ //shape을 이용하면 더 정확하게 prop정의 할수있다.\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.string,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.any)\r\n    }),\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}