{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpDate: {},\n    loginDate: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n}; //(이전상태, 액션) => 다음상태\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/reducers/index.js"],"names":["initialState","user","isLoggedIn","signUpDate","loginDate","post","mainPosts","login","data","type","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,UAAU,EAAE,KADX;AAEDD,IAAAA,IAAI,EAAC,IAFJ;AAGDE,IAAAA,UAAU,EAAE,EAHX;AAIDC,IAAAA,SAAS,EAAE;AAJV,GADY;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPW,CAArB;;AAYA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD,C,CAMA;;;AACA,MAAME,WAAW,GAAC,CAACC,KAAK,GAACX,YAAP,EAAoBY,MAApB,KAA6B;AAC3C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,QAAL;AACI,6CACOE,KADP;AAEIV,QAAAA,IAAI,kCACGU,KAAK,CAACV,IADT;AAEAC,UAAAA,UAAU,EAAE,IAFZ;AAGAD,UAAAA,IAAI,EAAEW,MAAM,CAACJ;AAHb;AAFR;AAFR;AAWH,CAZD;;AAcA,eAAeE,WAAf","sourcesContent":["const initialState = {\r\n    user:{\r\n        isLoggedIn: false,\r\n        user:null,\r\n        signUpDate: {},\r\n        loginDate: {},\r\n    },\r\n    post: {\r\n        mainPosts: [],\r\n    }\r\n};\r\n\r\nconst login = (data) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        data,\r\n    }\r\n}\r\n//(이전상태, 액션) => 다음상태\r\nconst rootReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case \"LOG_IN\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                },\r\n            }\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}