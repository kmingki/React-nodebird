{"ast":null,"code":"//import shortId from 'shortid';\n//import faker from 'faker';\nimport produce from \"immer\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n}; //action\n\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POSTS_REQUEST = 'ADD_POSTS_REQUEST';\nexport var ADD_POSTS_SUCCESS = 'ADD_POSTS_SUCCESS';\nexport var ADD_POSTS_FAILURE = 'ADD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE'; //Reducers : action을 통해 어떤 행동을 정의했다면, 그 결과 상태가 어떻게 바뀌는지 특정하게 되는 함수\n//produce state, 상태의 결과 함수\n//return produce()인 것\n//draft가 state로 바뀌는것\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          }); //push() : 배열의 맨뒤에 push\n\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          draft.likePostError = null;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostDone = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePostLoading = true;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unLikePostLoading = false;\n          draft.unLikePostDone = true;\n          draft.unLikePostError = null;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePostLoading = false;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts); //action.data = load한 배열, action.data + draft.mainPosts\n\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        draft.mainPosts.unshift(action.data); //새로운 요소를 배열의 맨 앞쪽에 추가하고, 새로운 길이반환\n\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.postId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostDone = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          draft.addCommentError = null;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = false;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        draft.uploadImagesError = false;\n        break;\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetDone = false;\n        draft.retweetError = action.error;\n        break;\n\n      default:\n        break;\n      //return draft해도 되지않나...\n    }\n  });\n};\n\nexport default reducer;\n/*\r\nhttps://react.vlpt.us/redux/01-keywords.html\r\n*/","map":{"version":3,"sources":["C:/Users/User/Desktop/node-bird/react-nodebird/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POSTS_REQUEST","ADD_POSTS_SUCCESS","ADD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","type","filter","v","i","data","post","find","id","PostId","Likers","push","UserId","error","concat","length","unshift","postId","Comments"],"mappings":"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","sourcesContent":["//import shortId from 'shortid';\r\n//import faker from 'faker';\r\nimport produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths:[],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unLikePostLoading: false,\r\n  unLikePostDone: false,\r\n  unLikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone : false,\r\n  retweetError: null,\r\n};\r\n\r\n//action\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POSTS_REQUEST = 'ADD_POSTS_REQUEST';\r\nexport const ADD_POSTS_SUCCESS = 'ADD_POSTS_SUCCESS';\r\nexport const ADD_POSTS_FAILURE = 'ADD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n//Reducers : action을 통해 어떤 행동을 정의했다면, 그 결과 상태가 어떻게 바뀌는지 특정하게 되는 함수\r\n//produce state, 상태의 결과 함수\r\n//return produce()인 것\r\n//draft가 state로 바뀌는것\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({ id: action.data.UserId }); //push() : 배열의 맨뒤에 push\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      draft.likePostError = null;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unLikePostLoading = true;\r\n      draft.unLikePostDone = false;\r\n      draft.unLikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v)=> v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v)=> v.id !== action.data.UserId);\r\n      draft.unLikePostLoading = false;\r\n      draft.unLikePostDone = true;\r\n      draft.unLikePostError = null;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unLikePostLoading = false;\r\n      draft.unLikePostDone = false;\r\n      draft.unLikePostError = action.error;\r\n      break;\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);//action.data = load한 배열, action.data + draft.mainPosts\r\n      draft.hasMorePosts = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POSTS_FAILURE: \r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone=false;\r\n      draft.addPostError=null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone=true;\r\n      draft.imagePaths = [];\r\n      draft.mainPosts.unshift(action.data);//새로운 요소를 배열의 맨 앞쪽에 추가하고, 새로운 길이반환\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading=true;\r\n      draft.removePostDone=false;\r\n      draft.removePostError=null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading=false;\r\n      draft.removePostDone=true;\r\n      draft.mainPosts=draft.mainPosts.filter((v)=> v.id !== action.data.postId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading=false;\r\n      draft.removePostDone=false;\r\n      draft.removePostError=action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone=false;\r\n      draft.addCommentError= null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v)=>v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading=false;\r\n      draft.addCommentDone=true;\r\n      draft.addCommentError= null;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading=false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = false;\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS:\r\n      draft.imagePaths=action.data;\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = true;\r\n      draft.uploadImagesError = false;\r\n      break;\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n    case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS:\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    default: \r\n      break; //return draft해도 되지않나...\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default reducer;\r\n/*\r\nhttps://react.vlpt.us/redux/01-keywords.html\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}