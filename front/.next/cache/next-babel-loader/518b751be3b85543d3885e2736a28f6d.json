{"ast":null,"code":"import { all, delay, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_SUCCESS, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n} /// delay() => Promise 가 한번 resolve 되고 나면, 미들웨어는 Saga 를 다시 작동시키면서, 다음 yield 까지 코드를 실행합니다.\n\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data); //{ email, password }\n    //console.log(result.data);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n/*err.response.data :  https://xn--xy1bk56a.run/axios/guide/error-handling.html */\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n} //put():특정 액션을 dispatch한다.\n\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/follow/${data}`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.patch(`/user/unfollow/${data}`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI() {\n  return axios.get('/user/loadFollowers');\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield loadFollowersAPI();\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI() {\n  return axios.get('/user/loadFollowings');\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield loadFollowingsAPI();\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/changeNickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data); // result.data.nickname\n\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/sagas/user.js"],"names":["all","delay","fork","takeLatest","put","call","axios","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_SUCCESS","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loadMyInfoAPI","get","loadMyInfo","action","result","type","data","err","console","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","log","followAPI","patch","follow","unfollowAPI","unfollow","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","changeNicknameAPI","nickname","changeNickname","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLoadFollowers","watchLoadFollowings","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, takeLatest, put, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    LOAD_MY_INFO_REQUEST,\r\n    LOAD_MY_INFO_SUCCESS,\r\n    LOAD_MY_INFO_FAILURE,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    CHANGE_NICKNAME_REQUEST,\r\n    CHANGE_NICKNAME_SUCCESS,\r\n    CHANGE_NICKNAME_FAILURE,\r\n  } from '../reducers/user';\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction * loadMyInfo (action) {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type:LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data){\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\n/// delay() => Promise 가 한번 resolve 되고 나면, 미들웨어는 Saga 를 다시 작동시키면서, 다음 yield 까지 코드를 실행합니다.\r\nfunction * logIn (action) {\r\n    try{\r\n        const result = yield call(logInAPI, action.data);//{ email, password }\r\n        //console.log(result.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err){\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data, \r\n        });\r\n    }\r\n}\r\n\r\n/*err.response.data :  https://xn--xy1bk56a.run/axios/guide/error-handling.html */\r\n\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction * logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\n//put():특정 액션을 dispatch한다.\r\nfunction* signUp(action) {\r\n    try {\r\n      const result = yield call(signUpAPI, action.data);\r\n      console.log(result);\r\n      yield put({\r\n        type: SIGN_UP_SUCCESS,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: SIGN_UP_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n  \r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/follow/${data}`);\r\n}\r\n\r\nfunction * follow(action) {\r\n    try{\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type:FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.patch(`/user/unfollow/${data}`);\r\n}\r\n\r\nfunction * unfollow(action) {\r\n    try{\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadFollowersAPI(){\r\n    return axios.get('/user/loadFollowers');\r\n}\r\nfunction * loadFollowers(action){\r\n    \r\n    try {\r\n        const result = yield loadFollowersAPI();\r\n\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(){\r\n    return axios.get('/user/loadFollowings');\r\n}\r\n\r\nfunction * loadFollowings(action){\r\n\r\n    try{\r\n        const result = yield loadFollowingsAPI();\r\n\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data\r\n        });\r\n\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n }\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/changeNickname', { nickname: data});\r\n}\r\n\r\nfunction * changeNickname(action) { \r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data); // result.data.nickname\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction * watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction * watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction * watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction * watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction * watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction * watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction * watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction * watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction * watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function * userSaga(){\r\n    yield all([\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}