{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id; //있으면 id 없으면 undefined\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginButtom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 38\n      }, _this) //이미지가 반드시 한개 이상일때\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 34\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"xp1qGyqXPHSTF1A9wR5SczRmimE=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: propTypes.shape({\n    //shape을 이용하면 더 정확하게 prop정의 할수있다.\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    createdAt: propTypes.object,\n    Comments: propTypes.arrayOf(propTypes.any),\n    Images: propTypes.arrayOf(propTypes.any)\n  })\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","propTypes","useSelector","Card","Popover","Button","List","Comment","Avatar","HeartTwoTone","MessageOutlined","EllipsisOutlined","HeartOutlined","RetweetOutlined","PostImages","CommentForm","PostCard","post","state","user","me","id","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginButtom","Images","User","nickname","content","Comments","length","item","shape","number","object","string","createdAt","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback }from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\r\nimport { HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport PostImages from './PostImages';\r\n\r\nimport CommentForm from './CommentForm';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id; //있으면 id 없으면 undefined\r\n\r\n    const [ liked, setLiked ] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev) => !prev);\r\n    },[]);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n\r\n    return(\r\n        <div style={{ marginButtom: 20 }}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images}/>}//이미지가 반드시 한개 이상일때\r\n            actions={[\r\n                <RetweetOutlined key=\"retweet\" />,\r\n                liked \r\n                ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                <MessageOutlined key=\"message\" onClick={onToggleComment}/>,\r\n                <Popover key=\"more\" content={(\r\n                    <Button.Group>\r\n                        {id && post.User.id === id \r\n                        ? (\r\n                            <>\r\n                            <Button>수정</Button>\r\n                            <Button type=\"danger\">삭제</Button>\r\n                        </>\r\n                        )\r\n                     : <Button>신고</Button>}\r\n                    </Button.Group>\r\n                )}\r\n                >\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={post.content}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                <CommentForm post={post} />\r\n                <List\r\n                header={`${post.Comments.length} 댓글`}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={post.Comments}\r\n                renderItem={(item) => (\r\n                    <li>\r\n                        <Comment \r\n                        author={item.User.nickname}\r\n                        avatar={(<a><Avatar>{item.User.nickname[0]}</Avatar></a>)}\r\n                        content={item.content}\r\n                        />\r\n                    </li>\r\n                )}\r\n                />                 \r\n                </>\r\n            )}\r\n        </div>          \r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: propTypes.shape({ //shape을 이용하면 더 정확하게 prop정의 할수있다.\r\n        id:propTypes.number,\r\n        User:propTypes.object,\r\n        content:propTypes.string,\r\n        createdAt:propTypes.object,\r\n        Comments:propTypes.arrayOf(propTypes.any),\r\n        Images: propTypes.arrayOf(propTypes.any)\r\n    }),\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}